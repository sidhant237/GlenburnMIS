{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/cultivation-grp/cultivation-grp.component.html","./src/app/cultivation/cultivation.component.html","./src/app/daily-report/daily-report.component.html","./src/app/factory/factory.component.html","./src/app/fine-leaf/fine-leaf.component.html","./src/app/fuel-report/fuel-report.component.html","./src/app/grade-per/grade-per.component.html","./src/app/invoice-list/invoice-list.component.html","./src/app/mnd-deployment/mnd-deployment.component.html","./src/app/plucking-grp/plucking-grp.component.html","./src/app/plucking/plucking.component.html","./src/app/shared/spinner/spinner.component.html","./src/app/tea-made/tea-made.component.html","./src/app/tea-stock/tea-stock.component.html","./src/app/upload-file/upload-file.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cultivation-grp/cultivation-grp.component.css","./src/app/cultivation-grp/cultivation-grp.component.ts","./src/app/cultivation/cultivation.component.css","./src/app/cultivation/cultivation.component.ts","./src/app/daily-report/daily-report.component.css","./src/app/daily-report/daily-report.component.ts","./src/app/factory/factory.component.css","./src/app/factory/factory.component.ts","./src/app/fine-leaf/fine-leaf.component.css","./src/app/fine-leaf/fine-leaf.component.ts","./src/app/fuel-report/fuel-report.component.css","./src/app/fuel-report/fuel-report.component.ts","./src/app/grade-per/grade-per.component.css","./src/app/grade-per/grade-per.component.ts","./src/app/invoice-list/invoice-list.component.css","./src/app/invoice-list/invoice-list.component.ts","./src/app/material-module.ts","./src/app/mnd-deployment/mnd-deployment.component.css","./src/app/mnd-deployment/mnd-deployment.component.ts","./src/app/plucking-grp/plucking-grp.component.css","./src/app/plucking-grp/plucking-grp.component.ts","./src/app/plucking/plucking.component.css","./src/app/plucking/plucking.component.ts","./src/app/shared/spinner/spinner.component.css","./src/app/shared/spinner/spinner.component.ts","./src/app/tea-made/tea-made.component.css","./src/app/tea-made/tea-made.component.ts","./src/app/tea-stock/tea-stock.component.css","./src/app/tea-stock/tea-stock.component.ts","./src/app/upload-file/upload-file.component.css","./src/app/upload-file/upload-file.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"min-height: 50px !important; height: 50px !important;\\\">\\n  <mat-toolbar-row>\\n    <button mat-icon-button class=\\\"example-icon\\\" aria-label=\\\"Example icon-button with menu icon\\\" (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"hideSideDrawer\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <h1 class=\\\"toolbar-heading\\\">\\n      <a [routerLink]=\\\"'/home'\\\" [routerLinkActive]=\\\"['active']\\\" >Glenburn MIS</a>\\n    </h1>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-sidenav-container>\\n  <mat-sidenav #drawer [mode]=\\\"hideSideDrawer ? 'over' : 'side'\\\" [opened] = \\\"hideSideDrawer ? false : true \\\">\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\\"'/home'\\\" [routerLinkActive]=\\\"['active']\\\"> Daily Report </a>\\n      <a mat-list-item [routerLink]=\\\"'/cultdaily'\\\" [routerLinkActive]=\\\"['active']\\\"> Cultivation </a>\\n      <a mat-list-item [routerLink]=\\\"'/cultgroup'\\\" [routerLinkActive]=\\\"['active']\\\"> Cultivation Group </a>\\n      <a mat-list-item [routerLink]=\\\"'/pluckdaily'\\\" [routerLinkActive]=\\\"['active']\\\"> Plucking </a>\\n      <a mat-list-item [routerLink]=\\\"'/pluckgroup'\\\" [routerLinkActive]=\\\"['active']\\\"> Plucking Group </a>\\n      <a mat-list-item [routerLink]=\\\"'/mnddeploy'\\\" [routerLinkActive]=\\\"['active']\\\"> Mnd Deployment </a>\\n      <a mat-list-item [routerLink]=\\\"'/fuelreport'\\\" [routerLinkActive]=\\\"['active']\\\"> Fuel Report </a>\\n      <a mat-list-item [routerLink]=\\\"'/teastock'\\\" [routerLinkActive]=\\\"['active']\\\"> Tea Stock </a>\\n      <a mat-list-item [routerLink]=\\\"'/factory'\\\" [routerLinkActive]=\\\"['active']\\\"> Factory </a>\\n      <a mat-list-item [routerLink]=\\\"'/teamade'\\\" [routerLinkActive]=\\\"['active']\\\"> Tea Made </a>\\n      <a mat-list-item [routerLink]=\\\"'/fineleaf'\\\" [routerLinkActive]=\\\"['active']\\\"> Green Leaf </a>\\n      <a mat-list-item [routerLink]=\\\"'/gradeper'\\\" [routerLinkActive]=\\\"['active']\\\"> Grade Per </a>\\n      <a mat-list-item [routerLink]=\\\"'/invoicelist'\\\" [routerLinkActive]=\\\"['active']\\\"> Invoice List </a>\\n      <a mat-list-item [routerLink]=\\\"'/upload-csv'\\\" [routerLinkActive]=\\\"['active']\\\"> Upload File </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <div style=\\\"height: 33rem;\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","export default \"<div class=\\\"example-container heading-wrap\\\">\\n  <div class=\\\"heading\\\">\\n    <h3>Cultivation Group Reports</h3>\\n  </div>\\n  <div class=\\\"control-wrap\\\">\\n    <div class=\\\"datepicker-control\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n  </div>\\n</div>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n    \\n    <ng-container matColumnDef=\\\"Job_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Job Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.Job_Name }} </td>\\n      <td mat-footer-cell *matFooterCellDef>Toatl</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"AreaCovered\\\">\\n      <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Mandays\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"MndArea\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','MndArea') | number}}</td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n  \\n      <!-- header -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <!-- data -->\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <!-- footer -->\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  </table>\\n</div>\\n  \\n  \\n  <!-- Compare section -->\\n<div class=\\\"example-container heading-wrap\\\">\\n  <h3>Comparision table</h3>\\n  <div class=\\\"control-wrap\\\">\\n    <div class=\\\"datepicker-control\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n  </div>\\n</div>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n      <ng-container matColumnDef=\\\"Job_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Job Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.Job_Name }} </td>\\n      <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n        <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MndArea\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','MndArea') | number}}</td>\\n      </ng-container>\\n\\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>    \\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n\\n    </table>\\n</div>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\">\\n  <mat-grid-tile colspan=\\\"1\\\">\\n    <h3>Cultivation reports</h3>\\n  </mat-grid-tile>\\n  <mat-grid-tile colspan=\\\"2\\\">\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n        (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n        (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"Date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n      <td mat-footer-cell *matFooterCellDef>Total</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"AreaCovered\\\">\\n      <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Division\\\">\\n      <th mat-header-cell *matHeaderCellDef> Division </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Job_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Mandays\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Mnd/Area\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mnd_Area}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Section_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Squad_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <!-- header -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <!-- data -->\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <!-- footer -->\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  </table>\\n</div>\\n\\n<!-- Compare section -->\\n<div>\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"80px\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Comparision table</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Go</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n      <ng-container matColumnDef=\\\"Date\\\">\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n        <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Division\\\">\\n        <th mat-header-cell *matHeaderCellDef> Division </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Job_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Mnd/Area\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mnd_Area}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Section_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Squad_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n</div>\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile [colspan]=\\\"stackGrid ? 3 : 1\\\">\\n      <h3>Daily Reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"stackGrid ? 3 : 2\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\" style=\\\"width: 100px !important;\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n\\n\\n<h3 class=\\\"table-heading\\\">Tea Made</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"teaMadeData\\\">\\n\\n        <ng-container matColumnDef=\\\"TMToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodate') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodateLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodateLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodateLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery To date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryTodate') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: teaMadeColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Green Leaf Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"greenleafData\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLTodayLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"FineLeaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','FineLeaf') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: greenLeafColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Grade Per Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"gradePerData\\\">\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n            <th mat-header-cell *matHeaderCellDef> Grade </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Qnty\\\">\\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Qnty}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('gradePerData','Qnty') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Percent\\\">\\n            <th mat-header-cell *matHeaderCellDef> Percent </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Percent | number: '1.2-2' }} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: GradePerColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Mandays Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"MandaysData\\\">\\n\\n        <ng-container matColumnDef=\\\"Job_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('MandaysData','Mandays') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"MandaysColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: MandaysColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"MandaysColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Plucking Data</h3>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"PluckingData\\\" class=\\\"col-10\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Section_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Squad_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','Mandays') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Greenleaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','Greenleaf') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"AreaCovered\\\">\\n            <th mat-header-cell *matHeaderCellDef> AreaCovered </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','AreaCovered') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlMnd\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Mnd </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlMnd}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','GlMnd') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','GlHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"MndHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mnd Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','MndHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Prune\\\">\\n            <th mat-header-cell *matHeaderCellDef> Prune </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Prune}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Jat\\\">\\n            <th mat-header-cell *matHeaderCellDef> Jat </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Jat}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"SecArea\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Area </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SecArea}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','SecArea') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"PluckingColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: PluckingColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"PluckingColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n\\n<h3 class=\\\"table-heading\\\">Cultivation Data</h3>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"CultivationData\\\" class=\\\"col-10\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"AreaCovered\\\">\\n            <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('CultivationData','AreaCovered') | number}}</td>\\n          </ng-container>\\n    \\n      \\n          <ng-container matColumnDef=\\\"Job_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('CultivationData','Mandays') | number}}</td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Mnd/Area\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('CultivationData','MndArea') | number}}</td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Section_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Squad_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"CultivationColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: CultivationColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"CultivationColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Fuel Report Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"FuelReportData\\\">\\n\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"Machine\\\">\\n            <th mat-header-cell *matHeaderCellDef>Machine</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Machine}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n        \\n            <!-- Fuel used Column -->\\n        <ng-container matColumnDef=\\\"FuelUsed\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fuel Used </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FuelUsed}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('FuelReportData','FuelUsed') | number}}</td>\\n        </ng-container>\\n\\n            <!-- TM Column -->\\n        <ng-container matColumnDef=\\\"TM\\\">\\n            <th mat-header-cell *matHeaderCellDef> Tea Made </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TM}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('FuelReportData','TM') | number}}</td>\\n        </ng-container>\\n\\n            <!-- TM Fuel Column -->\\n        <ng-container matColumnDef=\\\"TMFuel\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Fuel </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMFuel}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('FuelReportData','TMFuel') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"FuelReportColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: FuelReportColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"FuelReportColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Factory reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"date\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n\\n\\n<h3 class=\\\"table-heading\\\">Tea Made</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"teaMadeData\\\">\\n\\n        <ng-container matColumnDef=\\\"TMToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodate') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodateLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodateLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodateLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery To date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryTodate') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: teaMadeColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Green Leaf Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"greenleafData\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLTodayLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"FineLeaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','FineLeaf') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: greenLeafColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Garde Per Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"gradePerData\\\">\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n            <th mat-header-cell *matHeaderCellDef> Grade </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Qnty\\\">\\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Qnty}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('gradePerData','Qnty') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Percent\\\">\\n            <th mat-header-cell *matHeaderCellDef> Percent </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Percent | number: '1.2-2' }} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: GradePerColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Green Leaf reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n      <ng-container matColumnDef=\\\"Division\\\">\\n          <th mat-header-cell *matHeaderCellDef> Division </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GLToday\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSource','GLToday') | number }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSource','GLTodayLY') | number }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"FineLeaf\\\">\\n          <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSource','FineLeaf') | number }}</td>\\n      </ng-container>\\n\\n    <!-- header -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <!-- data -->\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <!-- footer -->\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  </table>\\n</div>\\n  \\n<!-- Compare section -->\\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"80px\\\" class=\\\"example-container col-5\\\">\\n  <mat-grid-tile colspan=\\\"1\\\">\\n    <h3>Comparision table</h3>\\n  </mat-grid-tile>\\n  <mat-grid-tile colspan=\\\"2\\\">\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n        (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n        (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GLToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSourceCmp','GLToday') | number }}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSourceCmp','GLTodayLY') | number }}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"FineLeaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSourceCmp','FineLeaf') | number }}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n\"","export default \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"60px\\\">\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <h1>Fuel Report</h1>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"container\\\">\\n  <div class=\\\"example-container\\\">\\n    <h3>Report</h3>\\n    <div class=\\\"control-wrap\\\">\\n      <div class=\\\"date-picker\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n            (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n            (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </div>\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n    \\n        <!-- Machine Column -->\\n        <ng-container matColumnDef=\\\"Machine\\\">\\n        <th mat-header-cell *matHeaderCellDef> Machine </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Machine}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <!-- Fuel used Column -->\\n        <ng-container matColumnDef=\\\"FuelUsed\\\">\\n        <th mat-header-cell *matHeaderCellDef> Fuel Used </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FuelUsed}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','FuelUsed') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Column -->\\n        <ng-container matColumnDef=\\\"TM\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TM}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','TM') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Fuel Column -->\\n        <ng-container matColumnDef=\\\"TMFuel\\\" class=\\\"mat-elevation-z8\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM Fuel </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMFuel}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','TMFuel') | number}}</td>\\n        </ng-container>\\n    \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n\\n  <div class=\\\"example-container\\\">\\n    <h3>Compare</h3>\\n    <div class=\\\"control-wrap\\\">\\n      <div class=\\\"date-picker\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n    </div>\\n\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\" class=\\\"mat-elevation-z8\\\">\\n    \\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"Machine\\\">\\n        <th mat-header-cell *matHeaderCellDef>Machine</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Machine}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <!-- Fuel used Column -->\\n        <ng-container matColumnDef=\\\"FuelUsed\\\">\\n          <th mat-header-cell *matHeaderCellDef> Fuel Used </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FuelUsed}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','FuelUsed') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Column -->\\n        <ng-container matColumnDef=\\\"TM\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TM}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','TM') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Fuel Column -->\\n        <ng-container matColumnDef=\\\"TMFuel\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM Fuel </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMFuel}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','TMFuel') | number}}</td>\\n        </ng-container>\\n    \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n</div>\\n  \\n  \\n\"","export default \"<p>grade-per works!</p>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Invoice reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"InvNo\\\">\\n        <th mat-header-cell *matHeaderCellDef> InvNo </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.InvNo}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n        <th mat-header-cell *matHeaderCellDef> Grade </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"NetWt\\\">\\n        <th mat-header-cell *matHeaderCellDef> Net Wt </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NetWt}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','NetWt') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Papersacks\\\">\\n        <th mat-header-cell *matHeaderCellDef> Paper Sacks </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Papersacks}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Papersacks') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Packdate\\\">\\n        <th mat-header-cell *matHeaderCellDef> Packdate </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Packdate}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\"","export default \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n  <mat-grid-tile colspan=\\\"2\\\">\\n    <h1>Mnd Deployment</h1>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <h3>Report Table</h3>\\n  </mat-grid-tile >\\n  <mat-grid-tile>\\n    <h3>Compare Table</h3>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"500px\\\">\\n  <mat-grid-tile>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <div class=\\\"control-wrap\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n            (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n            (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n      </div>\\n\\n      <table mat-table [dataSource]=\\\"dataSource\\\">\\n      \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"Job_Name\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n          </ng-container>\\n      \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n          </ng-container>\\n      \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n\\n      </table>\\n    </div>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <div class=\\\"control-wrap\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n    \\n        <mat-form-field style=\\\"width: 100px !important;\\\"> \\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n      </div>\\n\\n\\n      <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n      \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"Job_Name\\\">\\n          <th mat-header-cell *matHeaderCellDef>Job Name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n          </ng-container>\\n      \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n          </ng-container>\\n      \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      </table>\\n    </div>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n\"","export default \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"90px\\\">\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <h3>Plucking Group Reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n        <mat-form-field appearance=\\\"fill\\\">\\n            <mat-label>Select a group</mat-label>\\n            <mat-select [(value)]=\\\"selected\\\">\\n              <mat-option>None</mat-option>\\n              <mat-option value=\\\"Section\\\">Section</mat-option>\\n              <mat-option value=\\\"Division\\\">Division</mat-option>\\n              <mat-option value=\\\"Squad\\\">Squad</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n    \\n    <ng-container [matColumnDef]=\\\"group === 'Section' ? 'Section_Name' : group === 'Division' ? 'Division' : 'Squad' \\\">\\n      <th mat-header-cell *matHeaderCellDef> {{ group === 'Section' ? 'Section Name' : group === 'Division' ? 'Division' : 'Squad' }}</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ group === 'Section' ? element.Section_Name : group === 'Division' ? element.Division : element.Squad }} </td>\\n      <td mat-footer-cell *matFooterCellDef>Total</td>\\n    </ng-container>\\n\\n  \\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Greenleaf\\\">\\n        <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Greenleaf') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n        <th mat-header-cell *matHeaderCellDef> Area Covered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"GLMnd\\\">\\n        <th mat-header-cell *matHeaderCellDef> GL Mnd </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLMnd}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GLMnd') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"GLArea\\\">\\n        <th mat-header-cell *matHeaderCellDef> GL Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLArea}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GLArea') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MndArea\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mnd Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','MndArea') | number}}</td>\\n      </ng-container>\\n  \\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n  \\n  \\n  <!-- Compare section -->\\n  <div>\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"80px\\\">\\n      <mat-grid-tile colspan=\\\"2\\\">\\n        <h3>Comparision table</h3>\\n      </mat-grid-tile>\\n      <mat-grid-tile colspan=\\\"2\\\">\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Select a group</mat-label>\\n          <mat-select [(value)]=\\\"selectedCmp\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option value=\\\"Section\\\">Section</mat-option>\\n            <mat-option value=\\\"Division\\\">Division</mat-option>\\n            <mat-option value=\\\"Squad\\\">Squad</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  \\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n        <ng-container [matColumnDef]=\\\"groupCmp === 'Section' ? 'Section_Name' : groupCmp === 'Division' ? 'Division' : 'Squad' \\\">\\n          <th mat-header-cell *matHeaderCellDef> {{ groupCmp === 'Section' ? 'Section Name' : groupCmp === 'Division' ? 'Division' : 'Squad' }}</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{ groupCmp === 'Section' ? element.Section_Name : groupCmp === 'Division' ? element.Division : element.Squad }} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Greenleaf\\\">\\n          <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Greenleaf') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"AreaCovered\\\">\\n          <th mat-header-cell *matHeaderCellDef> Area Covered </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"GLMnd\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Mnd </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLMnd}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GLMnd') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"GLArea\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Area </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLArea}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GLArea') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"MndArea\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mnd Area </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','MndArea') | number}}</td>\\n        </ng-container>\\n  \\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsCmp; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsCmp;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumnsCmp; sticky: true\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Plucking reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Section_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Squad_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Greenleaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Greenleaf') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"AreaCovered\\\">\\n            <th mat-header-cell *matHeaderCellDef> AreaCovered </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlMnd\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Mnd </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlMnd}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GlMnd') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GlHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"MndHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mnd Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','MndHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Prune\\\">\\n            <th mat-header-cell *matHeaderCellDef> Prune </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Prune}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Jat\\\">\\n            <th mat-header-cell *matHeaderCellDef> Jat </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Jat}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"SecArea\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Area </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SecArea}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','SecArea') | number}}</td>\\n        </ng-container>\\n  \\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n  \\n  <!-- Compare section -->\\n  <div>\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"80px\\\">\\n      <mat-grid-tile colspan=\\\"1\\\">\\n        <h3>Comparision table</h3>\\n      </mat-grid-tile>\\n      <mat-grid-tile colspan=\\\"2\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  \\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n          <th mat-header-cell *matHeaderCellDef> Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Section_Name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Squad_Name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Greenleaf\\\">\\n          <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Greenleaf') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n          <th mat-header-cell *matHeaderCellDef> AreaCovered </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GlMnd\\\">\\n          <th mat-header-cell *matHeaderCellDef> Gl Mnd </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlMnd}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GlMnd') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GlHa\\\">\\n          <th mat-header-cell *matHeaderCellDef> Gl Ha </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlHa}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GlHa') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MndHa\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mnd Ha </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndHa}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','MndHa') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Division\\\">\\n          <th mat-header-cell *matHeaderCellDef> Division </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Prune\\\">\\n          <th mat-header-cell *matHeaderCellDef> Prune </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Prune}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Jat\\\">\\n          <th mat-header-cell *matHeaderCellDef> Jat </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Jat}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"SecArea\\\">\\n          <th mat-header-cell *matHeaderCellDef> Section Area </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SecArea}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','SecArea') | number}}</td>\\n      </ng-container>\\n  \\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n\"","export default \"<div class=\\\"lds-roller\\\">\\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\\n</div>\"","export default \"<p>tea-made works!</p>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Tea Stock reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n        <th mat-header-cell *matHeaderCellDef> Grade </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Kg\\\">\\n        <th mat-header-cell *matHeaderCellDef> Kg </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Kg}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Kg') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n    <mat-grid-list class=\\\"mat-elevation-z8\\\" cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile>\\n            <mat-form-field appearance=\\\"fill\\\">\\n                <mat-label>Select an option</mat-label>\\n                <mat-select [(value)]=\\\"database\\\">\\n                    <mat-option value=\\\"Jobtab\\\">JobTab</mat-option>\\n                    <mat-option value=\\\"TMEntry\\\">TMEntry</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile>\\n            <div matRipple>\\n                <button mat-raised-button color=\\\"accent\\\">\\n                    <input class=\\\"file-input\\\" type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n                </button>\\n            </div>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"!isUploading\\\">\\n            <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"uploadFileToServer()\\\" [disabled]=\\\"!database\\\">Upload</button>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"isUploading\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n        <button mat-flat-button color=\\\"accent\\\" (click)=\\\"emailReportHandler()\\\" *ngIf=\\\"!isMailSending\\\">Email Report</button>\\n    <div class=\\\"email-controller\\\" *ngIf=\\\"isMailSending\\\">\\n        <app-spinner></app-spinner>\\n    </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// componets\nimport { CultivationComponent } from './cultivation/cultivation.component';\nimport { CultivationGrpComponent } from './cultivation-grp/cultivation-grp.component';\nimport { PluckingComponent } from './plucking/plucking.component';\nimport { PluckingGrpComponent } from './plucking-grp/plucking-grp.component';\nimport { MndDeploymentComponent } from './mnd-deployment/mnd-deployment.component';\nimport { FuelReportComponent } from './fuel-report/fuel-report.component';\nimport { TeaStockComponent } from './tea-stock/tea-stock.component';\nimport { TeaMadeComponent } from './tea-made/tea-made.component';\nimport { FineLeafComponent } from './fine-leaf/fine-leaf.component';\nimport { GradePerComponent } from './grade-per/grade-per.component';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { FactoryComponent } from './factory/factory.component';\nimport { DailyReportComponent } from './daily-report/daily-report.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: DailyReportComponent },\n  { path: 'cultdaily', component: CultivationComponent },\n  { path: 'cultgroup', component: CultivationGrpComponent },\n  { path: 'pluckdaily', component: PluckingComponent },\n  { path: 'pluckgroup', component: PluckingGrpComponent },\n  { path: 'mnddeploy', component: MndDeploymentComponent },\n  { path: 'fuelreport', component: FuelReportComponent },\n  { path: 'teastock', component: TeaStockComponent },\n  { path: 'teamade', component: TeaMadeComponent },\n  { path: 'fineleaf', component: FineLeafComponent},\n  { path: 'gradeper', component: GradePerComponent},\n  { path: 'invoicelist', component: InvoiceListComponent},\n  { path: 'upload-csv', component: UploadFileComponent},\n  { path: 'factory', component: FactoryComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".mat-drawer-container {\\n    height: 92vh;\\n}\\n\\n.toolbar-heading a {\\n    text-decoration: none;\\n    color: white;\\n}\\n\\n.mat-nav-list {\\n    background-color: #70a452;\\n}\\n\\n.mat-toolbar-row {\\n    text-align: center;\\n}\\n\\n.mat-list-base {\\n    padding: 0 !important;\\n}\\n\\n.mat-list-item {\\n    color: white;\\n    font-weight: bolder;\\n}\\n\\n.mat-list-item:hover {\\n    background-color: white;\\n    color: #70a452;\\n}\\n\\n.mat-list-item.active {\\n    background-color: white;\\n    color: #4caf50;\\n} \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kcmF3ZXItY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDkydmg7XG59XG5cbi50b29sYmFyLWhlYWRpbmcgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cblxuLm1hdC1uYXYtbGlzdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzcwYTQ1Mjtcbn1cblxuLm1hdC10b29sYmFyLXJvdyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubWF0LWxpc3QtYmFzZSB7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWxpc3QtaXRlbSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi5tYXQtbGlzdC1pdGVtOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzcwYTQ1Mjtcbn1cblxuLm1hdC1saXN0LWl0ZW0uYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzRjYWY1MDtcbn0gIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  title = 'glen-mis-ui-angular';\n  hideSideDrawer = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private breakPointObserver: BreakpointObserver) {}\n\n  ngOnInit() {\n    this.mediaSubscription = this.breakPointObserver.observe([\n      '(max-width: 850px)'\n        ]).subscribe(result => {\n          if (result.matches === true) {\n            this.hideSideDrawer = true;\n          } else {\n            this.hideSideDrawer = false;\n          }\n    });\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material-module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// components\nimport { CultivationComponent } from './cultivation/cultivation.component';\nimport { CultivationGrpComponent } from './cultivation-grp/cultivation-grp.component';\nimport { PluckingComponent } from './plucking/plucking.component';\nimport { PluckingGrpComponent } from './plucking-grp/plucking-grp.component';\nimport { MndDeploymentComponent } from './mnd-deployment/mnd-deployment.component';\nimport { FuelReportComponent } from './fuel-report/fuel-report.component';\nimport { TeaStockComponent } from './tea-stock/tea-stock.component';\nimport { TeaMadeComponent } from './tea-made/tea-made.component';\nimport { FineLeafComponent } from './fine-leaf/fine-leaf.component';\nimport { GradePerComponent } from './grade-per/grade-per.component';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { FactoryComponent } from './factory/factory.component';\nimport { SpinnerComponent } from './shared/spinner/spinner.component';\nimport { DailyReportComponent } from './daily-report/daily-report.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CultivationComponent,\n    CultivationGrpComponent,\n    PluckingComponent,\n    PluckingGrpComponent,\n    MndDeploymentComponent,\n    FuelReportComponent,\n    TeaStockComponent,\n    TeaMadeComponent,\n    FineLeafComponent,\n    GradePerComponent,\n    InvoiceListComponent,\n    UploadFileComponent,\n    FactoryComponent,\n    SpinnerComponent,\n    DailyReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.heading-wrap {\\n  width: 65%;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.control-wrap {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.datepicker-control {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n@media(max-width: 700px) {\\n  .col-5 {\\n    width: 100%;\\n  }\\n\\n  .control-wrap {\\n    flex-direction: column;\\n  }\\n\\n  .datepicker-control {\\n    flex-direction: column;\\n  }\\n\\n  .heading-wrap {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VsdGl2YXRpb24tZ3JwL2N1bHRpdmF0aW9uLWdycC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jdWx0aXZhdGlvbi1ncnAvY3VsdGl2YXRpb24tZ3JwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmhlYWRpbmctd3JhcCB7XG4gIHdpZHRoOiA2NSU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmNvbnRyb2wtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGF0ZXBpY2tlci1jb250cm9sIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG5AbWVkaWEobWF4LXdpZHRoOiA3MDBweCkge1xuICAuY29sLTUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmNvbnRyb2wtd3JhcCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5kYXRlcGlja2VyLWNvbnRyb2wge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuaGVhZGluZy13cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-cultivation-grp',\n  templateUrl: './cultivation-grp.component.html',\n  styleUrls: ['./cultivation-grp.component.css']\n})\nexport class CultivationGrpComponent implements OnInit, OnDestroy {\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: any;\n  dataSource: any;\n  dataSourceCmp: any;\n  stackGrid = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private http: HttpClient, private breakPointObserver: BreakpointObserver) {\n  }\n\n  ngOnInit() {\n\tthis.startdate = new Date();\n\tthis.enddate = new Date();\n\tthis.startdate.setDate(this.startdate.getDate() - 1);\n\tthis.startdateCmp = this.startdate;\n\tthis.enddateCmp = this.enddate;\n\tthis.displayedColumns = ['Job_Name', 'Mandays', 'AreaCovered', 'MndArea'];\n\n\tconst url = 'http://127.0.0.1:5000/cultgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\tthis.http.get(url).subscribe((data: CultivationGroupByJob) => {\n\t\tthis.dataSource = data;\n\t\t});\n\n\tthis.mediaWidthHandler();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.mediaSubscription.unsubscribe();\n\t}\n\n\tmediaWidthHandler() {\n\t\tthis.mediaSubscription = this.breakPointObserver.observe([\n\t\t  '(max-width: 700px)'\n\t\t\t]).subscribe(result => {\n\t\t\t  if (result.matches === true) {\n\t\t\t\tthis.stackGrid = true;\n\t\t\t  } else {\n\t\t\t\tthis.stackGrid = false;\n\t\t\t  }\n\t\t});\n\t  }\n\n\tclickedGo() {\n\t\tconst url = 'http://127.0.0.1:5000/cultgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\t\tthis.http.get(url).subscribe((data: CultivationGroupByJob) => {\n\t\tthis.dataSource = data;\n\t\t});\n\t}\n\n\tclickedGoCompare() {\n\t\tconst url = 'http://127.0.0.1:5000/cultgroup?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n\t\tthis.http.get(url).subscribe((data: CultivationGroupByJob) => {\n\t\t\tthis.dataSourceCmp = data;\n\t\t});\n\t}\n\n\tdateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n\t\tswitch (type) {\n\t\t\tcase 'startdate': this.startdate = event.value; break;\n\t\t\tcase 'enddate': this.enddate = event.value; break;\n\t\t\tcase 'startdateCmp': this.startdateCmp = event.value; break;\n\t\t\tcase 'enddateCmp': this.enddateCmp = event.value; break;\n\t\t}\n\t}\n\n\tconvert(str) {\n\t\tvar date = new Date(str),\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\").toString();\n\t}\n\n\tgetTotal(_dataSrc: string, _field: string) {\n\t\tif (this[_dataSrc]) {\n\t\t\treturn this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport interface CultivationGroupByJob {\n\tJob_Name: string;\n\tMandays: number;\n\tAreaCovered: number;\n\tMndArea: number;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VsdGl2YXRpb24vY3VsdGl2YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGNBQWM7RUFDZCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2N1bHRpdmF0aW9uL2N1bHRpdmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbC01e1xuICB3aWR0aDogNjUlO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n\tselector: 'app-cultivation',\n\ttemplateUrl: './cultivation.component.html',\n\tstyleUrls: ['./cultivation.component.css']\n})\nexport class CultivationComponent implements OnInit {\n\n\tstartdate; enddate; startdateCmp; enddateCmp; displayedColumns; dataSource; dataSourceCmp;\n\n\t//dev purpose\n\t//_startdate = '2020-07-01';\n\t//_enddate = '2020-07-14';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tngOnInit() {\n\t\tthis.startdate = new Date();\n\t\tthis.enddate = new Date();\n\t\tthis.startdate.setDate(this.startdate.getDate() - 1);\n\t\tthis.startdateCmp = this.startdate;\n\t\tthis.enddateCmp = this.enddate;\n\t\tthis.displayedColumns = ['Date', 'Division', 'AreaCovered', 'Job_Name', 'Mandays', 'Mnd/Area', 'Section_Name', 'Squad_Name'];\n\n\t\tconst url = 'http://127.0.0.1:5000/cultdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\t\t//dev purpose\n\t\t//const url = 'http://127.0.0.1:5000/cultdaily?start=' + this._startdate + '&end=' + this._enddate;\n\t\tthis.http.get(url).subscribe((data: ICultivation) => {\n\t\t\tthis.dataSource = data;\n\t\t});\n\t}\n\n\tclickedGo() {\n\t\tconst url = 'http://127.0.0.1:5000/cultdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\t\t//dev purpose\n\t\t//const url = 'http://127.0.0.1:5000/cultdaily?start=' + this._startdate + '&end=' + this._enddate;\n\t\tthis.http.get(url).subscribe((data: ICultivation) => {\n\t\t\tthis.dataSource = data;\n\t\t});\n\t}\n\n\tclickedGoCompare() {\n\t\tconst url = 'http://127.0.0.1:5000/cultdaily?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n\t\t//dev purpose\n\t\t//const url = 'http://127.0.0.1:5000/cultdaily?start=' + this._startdate + '&end=' + this._enddate;\n\t\tthis.http.get(url).subscribe((data: ICultivation) => {\n\t\t\tthis.dataSourceCmp = data;\n\t\t});\n\t}\n\n\tgetTotal(_dataSrc: string, _field: string) {\n\t\tif (this[_dataSrc]) {\n\t\t\treturn this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tdateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n\t\tswitch (type) {\n\t\t\tcase 'startdate': this.startdate = event.value; break;\n\t\t\tcase 'enddate': this.enddate = event.value; break;\n\t\t\tcase 'startdateCmp': this.startdateCmp = event.value; break;\n\t\t\tcase 'enddateCmp': this.enddateCmp = event.value; break;\n\t\t}\n\t}\n\n\tconvert(str) {\n\t\tvar date = new Date(str),\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\").toString();\n\t}\n\n}\n\nexport interface ICultivation {\n\tDate: string;\n\tJob_Name: string;\n\tSection_Name: string;\n\tSquad_Name: string;\n\tMandays: number;\n\tAreaCovered: number;\n\tMnd_Area: number;\n\tDivision: string;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\n.col-10 {\\n  min-width: 850px;\\n}\\n\\n.table-heading {\\n  text-align: center !important;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n  overflow: scroll;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\n.mat-form-field {\\n  width: 130px !important;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  border-top: 1px solid #e0e0e0;\\n  background-color: #c0c0c0;\\n}\\n\\n@media(max-width: 700px) {\\n  .col-5 {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFpbHktcmVwb3J0L2RhaWx5LXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsNkJBQTZCO0VBQzdCLHlCQUF5QjtBQUMzQjs7QUFDQTtFQUNFO0lBQ0UsV0FBVztFQUNiO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9kYWlseS1yZXBvcnQvZGFpbHktcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbC01e1xuICB3aWR0aDogNjUlO1xufVxuXG4uY29sLTEwIHtcbiAgbWluLXdpZHRoOiA4NTBweDtcbn1cblxuLnRhYmxlLWhlYWRpbmcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTMwcHggIWltcG9ydGFudDtcbn1cblxudHIubWF0LWZvb3Rlci1yb3cge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLm1hdC10YWJsZS1zdGlja3kge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbn1cbkBtZWRpYShtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIC5jb2wtNSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-daily-report',\n  templateUrl: './daily-report.component.html',\n  styleUrls: ['./daily-report.component.css']\n})\nexport class DailyReportComponent implements OnInit, OnDestroy {\n  startdate: any;\n  teaMadeColumns: string[];\n  greenLeafColumns: string[];\n  GradePerColumns: string[];\n  MandaysColumns: string[];\n  PluckingColumns: string[];\n  CultivationColumns: string[];\n  FuelReportColumns: string[];\n\n  teaMadeData: any;\n  greenleafData: any;\n  gradePerData: any;\n  MandaysData: any;\n  PluckingData: any;\n  CultivationData: any;\n  FuelReportData: any;\n  stackGrid = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private http: HttpClient, private breakPointObserver: BreakpointObserver) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.teaMadeColumns = ['TMToday', 'TMTodate', 'TMTodateLY', 'RecoveryToday', 'RecoveryTodate'];\n    this.greenLeafColumns = ['Division', 'GLToday', 'GLTodayLY', 'FineLeaf'];\n    this.GradePerColumns = ['Grade', 'Qnty', 'Percent'];\n    this.MandaysColumns = ['Job_Name', 'Mandays'];\n    this.PluckingColumns = ['Date', 'Division', 'Section_Name', 'Squad_Name', 'Mandays', 'Greenleaf', 'AreaCovered',\n                            'GlMnd', 'GlHa', 'MndHa', 'Prune', 'Jat', 'SecArea'];\n    this.CultivationColumns = ['Date', 'Division', 'AreaCovered', 'Job_Name', 'Mandays', 'Mnd/Area', 'Section_Name', 'Squad_Name'];\n    this.FuelReportColumns = ['Machine', 'FuelUsed', 'TM', 'TMFuel'];\n\n    const url = 'http://127.0.0.1:5000/dailyreport?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: DailyReport) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n      this.MandaysData = data.Mandays;\n      this.PluckingData = data.Plucking;\n      this.CultivationData = data.Cultivation;\n      this.FuelReportData = data.FuelReport;\n    });\n\n    this.mediaWidthHandler();\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n  mediaWidthHandler() {\n    this.mediaSubscription = this.breakPointObserver.observe([\n      '(max-width: 700px)'\n        ]).subscribe(result => {\n          if (result.matches === true) {\n            this.stackGrid = true;\n          } else {\n            this.stackGrid = false;\n          }\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/dailyreport?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: DailyReport) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n      this.MandaysData = data.Mandays;\n      this.PluckingData = data.Plucking;\n      this.CultivationData = data.Cultivation;\n      this.FuelReportData = data.FuelReport;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n      this.startdate = event.value;\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n}\n\nexport interface DailyReport {\n  Greenleaf: any;\n  TeaMade: any;\n  Mandays: any;\n  Plucking: any;\n  Cultivation: any;\n  GradePer: any;\n  FuelReport: any;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\n.table-heading {\\n  text-align: center !important;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  border-top: 1px solid #e0e0e0;\\n  background-color: #c0c0c0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmFjdG9yeS9mYWN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxjQUFjO0VBQ2QsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFHQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3Qix5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9mYWN0b3J5L2ZhY3RvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLCBidXR0b24ge1xuICAgIG1hcmdpbjogMTBweDtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgbWF4LWhlaWdodDogMzUwcHg7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBtYXgtd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uY29sLTV7XG4gIHdpZHRoOiA2NSU7XG59XG5cblxuLnRhYmxlLWhlYWRpbmcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-factory',\n  templateUrl: './factory.component.html',\n  styleUrls: ['./factory.component.css']\n})\nexport class FactoryComponent implements OnInit {\n\n  date: any;\n  teaMadeColumns: string[];\n  greenLeafColumns: string[];\n  GradePerColumns: string[];\n  teaMadeData: any;\n  greenleafData: any;\n  gradePerData: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.date = new Date();\n    this.date.setDate(this.date.getDate() - 1);\n    this.teaMadeColumns = ['TMToday', 'TMTodate', 'TMTodateLY', 'RecoveryToday', 'RecoveryTodate'];\n    this.greenLeafColumns = ['Division', 'GLToday', 'GLTodayLY', 'FineLeaf'];\n    this.GradePerColumns = ['Grade', 'Qnty', 'Percent'];\n\n    const url = 'http://127.0.0.1:5000/factory?start=' + this.convert(this.date);\n    this.http.get(url).subscribe((data: Factory) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/factory?start=' + this.convert(this.date);\n    this.http.get(url).subscribe((data: Factory) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n      this.date = event.value;\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n}\n\nexport interface Factory {\n  TeaMade: any[];\n  Greenleaf: any[];\n  GradePer: any[];\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluZS1sZWFmL2ZpbmUtbGVhZi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBR0E7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvZmluZS1sZWFmL2ZpbmUtbGVhZi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG59XG5cbnRyLm1hdC1mb290ZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtdGFibGUtc3RpY2t5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-fine-leaf',\n  templateUrl: './fine-leaf.component.html',\n  styleUrls: ['./fine-leaf.component.css']\n})\nexport class FineLeafComponent implements OnInit {\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: string[];\n  dataSource: any;\n  dataSourceCmp: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n    this.displayedColumns = ['Division', 'GLToday', 'GLTodayLY', 'FineLeaf'];\n\n    const url = 'http://127.0.0.1:5000/GL?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: GreenLeaf) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/GL?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: GreenLeaf) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/GL?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: GreenLeaf) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n  \n}\n\nexport interface GreenLeaf {\n  Division: string;\n  GLToday: number;\n  GLTodayLY: number;\n  FineLeaf: number;\n}\n","export default \"mat-form-field, button {\\n    margin: 5px;\\n}\\n\\nh1 {\\n  margin-bottom: 5px;\\n}\\n\\nh3 {\\n  margin-bottom: 10px;\\n}\\n\\n.container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.example-container {\\n  margin: 15px 15px;\\n  box-sizing: border-box;\\n  overflow: auto;\\n  min-width: 271px;\\n  width: 40%;\\n  max-height: 80vh;\\n  margin-bottom: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  align-items: center; \\n}\\n\\n.mat-table {\\n  width: 90%;\\n}\\n\\n.control-wrap {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n@media(max-width: 650px) {\\n  .container {\\n    flex-direction: column;\\n  }\\n\\n  .control-wrap {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnVlbC1yZXBvcnQvZnVlbC1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9mdWVsLXJlcG9ydC9mdWVsLXJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiA1cHg7XG59XG5cbmgxIHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG5oMyB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgbWFyZ2luOiAxNXB4IDE1cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBtaW4td2lkdGg6IDI3MXB4O1xuICB3aWR0aDogNDAlO1xuICBtYXgtaGVpZ2h0OiA4MHZoO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxufVxuXG4ubWF0LXRhYmxlIHtcbiAgd2lkdGg6IDkwJTtcbn1cblxuLmNvbnRyb2wtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG59XG5cbnRyLm1hdC1mb290ZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtdGFibGUtc3RpY2t5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbkBtZWRpYShtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuY29udHJvbC13cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\nexport interface FuelReport {\n  Machine: string;\n  FuelUsed: number;\n  TM: number;\n  TMFuel: number;\n}\n\n@Component({\n  selector: 'app-fuel-report',\n  templateUrl: './fuel-report.component.html',\n  styleUrls: ['./fuel-report.component.css']\n})\nexport class FuelReportComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['Machine', 'FuelUsed', 'TM', 'TMFuel'];\n  dataSource: FuelReport[];\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  dataSourceCmp: FuelReport[];\n\n  mediumDevice = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private http: HttpClient, private breakPointObserver: BreakpointObserver) { }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n\n    const url = 'http://127.0.0.1:5000/fuelreport?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: FuelReport[]) => {\n      this.dataSource = data;\n    });\n    this.mediaChangeHandler();\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n  mediaChangeHandler() {\n    this.mediaSubscription = this.breakPointObserver.observe([\n      '(max-width: 768px)'\n        ]).subscribe(result => {\n          if (result.matches === true) {\n            this.mediumDevice = true;\n          } else {\n            this.mediumDevice = false;\n          }\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/fuelreport?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: FuelReport[]) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/fuelreport?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: FuelReport[]) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n\t\tif (this[_dataSrc]) {\n\t\t\treturn this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyYWRlLXBlci9ncmFkZS1wZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grade-per',\n  templateUrl: './grade-per.component.html',\n  styleUrls: ['./grade-per.component.css']\n})\nexport class GradePerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZS1saXN0L2ludm9pY2UtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvaW52b2ljZS1saXN0L2ludm9pY2UtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css']\n})\nexport class InvoiceListComponent implements OnInit {\n  startdate: any;\n  enddate: any;\n  displayedColumns: string[];\n  dataSource: Invoice;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.displayedColumns = ['InvNo', 'Grade', 'NetWt', 'Papersacks', 'Packdate'];\n\n    const url = 'http://127.0.0.1:5000/invoicelist?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Invoice) => {\n    this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/invoicelist?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Invoice) => {\n      this.dataSource = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n    }\n\n    getTotal(_dataSrc: string, _field: string) {\n      if (this[_dataSrc]) {\n        return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n      } else {\n        return null;\n      }\n    }\n}\n\nexport interface Invoice {\n  InvNo: string;\n  Grade: string;\n  NetWt: string;\n  Papersacks: string;\n  Packdate: number;\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\nh1 {\\n  margin-bottom: 10px;\\n}\\n\\nh3 {\\n  margin-bottom: 0;\\n}\\n\\n.example-container {\\n  padding: 5px 10px;\\n  box-sizing: border-box;\\n  max-height: 75vh;\\n  width: 75%;\\n  margin-bottom: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  align-items: center;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n}\\n\\n.control-wrap {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.mat-table {\\n  width: 90%;\\n  max-height: 350px;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  border-top: 1px solid #e0e0e0;\\n  background-color: #c0c0c0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW5kLWRlcGxveW1lbnQvbW5kLWRlcGxveW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsNkJBQTZCO0VBQzdCLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL21uZC1kZXBsb3ltZW50L21uZC1kZXBsb3ltZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbmgxIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuaDMge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWF4LWhlaWdodDogNzV2aDtcbiAgd2lkdGg6IDc1JTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmNvbnRyb2wtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubWF0LXRhYmxlIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWF4LWhlaWdodDogMzUwcHg7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGluaXRpYWw7XG59XG5cbnRoIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbn1cblxudHIubWF0LWZvb3Rlci1yb3cge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLm1hdC10YWJsZS1zdGlja3kge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nexport interface MndDeployment {\n  Job_Name: string;\n  Mandays: number;\n}\n\n\n@Component({\n  selector: 'app-mnd-deployment',\n  templateUrl: './mnd-deployment.component.html',\n  styleUrls: ['./mnd-deployment.component.css']\n})\nexport class MndDeploymentComponent implements OnInit {\n\n  displayedColumns: string[] = ['Job_Name', 'Mandays'];\n  dataSource: MndDeployment[];\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  dataSourceCmp: MndDeployment[];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n\n    const url = 'http://127.0.0.1:5000/mnddeploy?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: MndDeployment[]) => {\n      this.dataSource = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/mnddeploy?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: MndDeployment[]) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/mnddeploy?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: MndDeployment[]) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGx1Y2tpbmctZ3JwL3BsdWNraW5nLWdycC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvcGx1Y2tpbmctZ3JwL3BsdWNraW5nLWdycC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-plucking-grp',\n  templateUrl: './plucking-grp.component.html',\n  styleUrls: ['./plucking-grp.component.css']\n})\nexport class PluckingGrpComponent implements OnInit {\n\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: any;\n  displayedColumnsCmp: any;\n  dataSource: any;\n  dataSourceCmp: any;\n  showCompare: boolean;\n  selected: string;\n  selectedCmp: string;\n  group: string;\n  groupCmp: string;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n    this.showCompare = false;\n    this.displayedColumns = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n    this.displayedColumnsCmp = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n    this.selected = 'Division';\n    this.selectedCmp = 'Division';\n    this.group = 'Division';\n    this.groupCmp = 'Division';\n\n    const url = 'http://127.0.0.1:5000/pluckgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate) + '&grpby=' + this.selected;\n    this.http.get(url).subscribe((data: PluckingGroupBySection) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/pluckgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate) + '&grpby=' + this.selected;\n    this.http.get(url).subscribe((data: any) => {\n      this.group = this.selected;\n      if (this.selected === 'Section') {\n        this.displayedColumns = ['Section_Name', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSectionData('report', data);\n      } else if (this.selected === 'Division') {\n        this.displayedColumns = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseDivisionData('report', data);\n      } else {\n        this.displayedColumns = ['Squad', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSquadData('report', data);\n      }\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/pluckgroup?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp) + '&grpby=' + this.selectedCmp;\n    this.http.get(url).subscribe((data: any) => {\n      this.groupCmp = this.selectedCmp;\n      if (this.selectedCmp === 'Section') {\n        this.displayedColumnsCmp = ['Section_Name', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSectionData('compare', data);\n      } else if (this.selectedCmp === 'Division') {\n        this.displayedColumnsCmp = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseDivisionData('compare', data);\n      } else {\n        this.displayedColumnsCmp = ['Squad', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSquadData('compare', data);\n      }\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n  parseDivisionData(type: string, data: PluckingGroupByDivision) {\n    switch (type) {\n      case 'report': this.dataSource = data; break;\n      case 'compare': this.dataSourceCmp = data; break;\n    }\n  }\n\n  parseSectionData(type: string, data: PluckingGroupBySection) {\n    switch (type) {\n      case 'report': this.dataSource = data; break;\n      case 'compare': this.dataSourceCmp = data; break;\n    }\n  }\n\n  parseSquadData(type: string, data: PluckingGroupBySquad) {\n    switch (type) {\n      case 'report': this.dataSource = data; break;\n      case 'compare': this.dataSourceCmp = data; break;\n    }\n  }\n\n}\n\nexport interface PluckingGroupBySection {\n  Section_Name: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GLMnd: number;\n  GLArea: number;\n  MndArea: number;\n}\n\nexport interface PluckingGroupByDivision {\n  Division: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GLMnd: number;\n  GLArea: number;\n  MndArea: number;\n}\n\nexport interface PluckingGroupBySquad {\n  Squad: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GLMnd: number;\n  GLArea: number;\n  MndArea: number;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGx1Y2tpbmcvcGx1Y2tpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGNBQWM7RUFDZCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL3BsdWNraW5nL3BsdWNraW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbC01e1xuICB3aWR0aDogNjUlO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG59XG5cbnRyLm1hdC1mb290ZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtdGFibGUtc3RpY2t5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-plucking',\n  templateUrl: './plucking.component.html',\n  styleUrls: ['./plucking.component.css']\n})\nexport class PluckingComponent implements OnInit {\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: string[];\n  dataSource: any;\n  dataSourceCmp: any;\n  showCompare: boolean;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n    this.showCompare = false;\n    this.displayedColumns = [ 'Date', 'Division', 'Section_Name', 'Squad_Name', 'Mandays', 'Greenleaf',\n                              'AreaCovered', 'GlMnd', 'GlHa', 'MndHa', 'Prune', 'Jat', 'SecArea'];\n\n    const url = 'http://127.0.0.1:5000/pluckdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Plucking) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/pluckdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Plucking) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedCompare() {\n    this.showCompare = true;\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/pluckdaily?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: Plucking) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n}\n\nexport interface Plucking {\n  Date: string;\n  Section_Name: string;\n  Squad_Name: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GlMnd: number;\n  GlHa: number;\n  MndHa: number;\n  Division: string;\n  Prune: string;\n  Jat: string;\n  SecArea: number;\n}\n","export default \".lds-roller {\\n    display: inline-block;\\n    position: relative;\\n    width: 80px;\\n    height: 80px;\\n  }\\n  .lds-roller div {\\n    -webkit-animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n            animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n    transform-origin: 40px 40px;\\n  }\\n  .lds-roller div:after {\\n    content: \\\" \\\";\\n    display: block;\\n    position: absolute;\\n    width: 7px;\\n    height: 7px;\\n    border-radius: 50%;\\n    background: green;\\n    margin: -4px 0 0 -4px;\\n  }\\n  .lds-roller div:nth-child(1) {\\n    -webkit-animation-delay: -0.036s;\\n            animation-delay: -0.036s;\\n  }\\n  .lds-roller div:nth-child(1):after {\\n    top: 63px;\\n    left: 63px;\\n  }\\n  .lds-roller div:nth-child(2) {\\n    -webkit-animation-delay: -0.072s;\\n            animation-delay: -0.072s;\\n  }\\n  .lds-roller div:nth-child(2):after {\\n    top: 68px;\\n    left: 56px;\\n  }\\n  .lds-roller div:nth-child(3) {\\n    -webkit-animation-delay: -0.108s;\\n            animation-delay: -0.108s;\\n  }\\n  .lds-roller div:nth-child(3):after {\\n    top: 71px;\\n    left: 48px;\\n  }\\n  .lds-roller div:nth-child(4) {\\n    -webkit-animation-delay: -0.144s;\\n            animation-delay: -0.144s;\\n  }\\n  .lds-roller div:nth-child(4):after {\\n    top: 72px;\\n    left: 40px;\\n  }\\n  .lds-roller div:nth-child(5) {\\n    -webkit-animation-delay: -0.18s;\\n            animation-delay: -0.18s;\\n  }\\n  .lds-roller div:nth-child(5):after {\\n    top: 71px;\\n    left: 32px;\\n  }\\n  .lds-roller div:nth-child(6) {\\n    -webkit-animation-delay: -0.216s;\\n            animation-delay: -0.216s;\\n  }\\n  .lds-roller div:nth-child(6):after {\\n    top: 68px;\\n    left: 24px;\\n  }\\n  .lds-roller div:nth-child(7) {\\n    -webkit-animation-delay: -0.252s;\\n            animation-delay: -0.252s;\\n  }\\n  .lds-roller div:nth-child(7):after {\\n    top: 63px;\\n    left: 17px;\\n  }\\n  .lds-roller div:nth-child(8) {\\n    -webkit-animation-delay: -0.288s;\\n            animation-delay: -0.288s;\\n  }\\n  .lds-roller div:nth-child(8):after {\\n    top: 56px;\\n    left: 12px;\\n  }\\n  @-webkit-keyframes lds-roller {\\n    0% {\\n      transform: rotate(0deg);\\n    }\\n    100% {\\n      transform: rotate(360deg);\\n    }\\n  }\\n  @keyframes lds-roller {\\n    0% {\\n      transform: rotate(0deg);\\n    }\\n    100% {\\n      transform: rotate(360deg);\\n    }\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtFQUNkO0VBQ0E7SUFDRSx3RUFBZ0U7WUFBaEUsZ0VBQWdFO0lBQ2hFLDJCQUEyQjtFQUM3QjtFQUNBO0lBQ0UsWUFBWTtJQUNaLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLHFCQUFxQjtFQUN2QjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsK0JBQXVCO1lBQXZCLHVCQUF1QjtFQUN6QjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0U7TUFDRSx1QkFBdUI7SUFDekI7SUFDQTtNQUNFLHlCQUF5QjtJQUMzQjtFQUNGO0VBUEE7SUFDRTtNQUNFLHVCQUF1QjtJQUN6QjtJQUNBO01BQ0UseUJBQXlCO0lBQzNCO0VBQ0YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGRzLXJvbGxlciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogODBweDtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2IHtcbiAgICBhbmltYXRpb246IGxkcy1yb2xsZXIgMS4ycyBjdWJpYy1iZXppZXIoMC41LCAwLCAwLjUsIDEpIGluZmluaXRlO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDQwcHggNDBweDtcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogN3B4O1xuICAgIGhlaWdodDogN3B4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kOiBncmVlbjtcbiAgICBtYXJnaW46IC00cHggMCAwIC00cHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCgxKSB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4wMzZzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoMSk6YWZ0ZXIge1xuICAgIHRvcDogNjNweDtcbiAgICBsZWZ0OiA2M3B4O1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoMikge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMDcycztcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDIpOmFmdGVyIHtcbiAgICB0b3A6IDY4cHg7XG4gICAgbGVmdDogNTZweDtcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDMpIHtcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjEwOHM7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCgzKTphZnRlciB7XG4gICAgdG9wOiA3MXB4O1xuICAgIGxlZnQ6IDQ4cHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg0KSB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNDRzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNCk6YWZ0ZXIge1xuICAgIHRvcDogNzJweDtcbiAgICBsZWZ0OiA0MHB4O1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNSkge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMThzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNSk6YWZ0ZXIge1xuICAgIHRvcDogNzFweDtcbiAgICBsZWZ0OiAzMnB4O1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNikge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMjE2cztcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDYpOmFmdGVyIHtcbiAgICB0b3A6IDY4cHg7XG4gICAgbGVmdDogMjRweDtcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDcpIHtcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjI1MnM7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg3KTphZnRlciB7XG4gICAgdG9wOiA2M3B4O1xuICAgIGxlZnQ6IDE3cHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg4KSB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4yODhzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoOCk6YWZ0ZXIge1xuICAgIHRvcDogNTZweDtcbiAgICBsZWZ0OiAxMnB4O1xuICB9XG4gIEBrZXlmcmFtZXMgbGRzLXJvbGxlciB7XG4gICAgMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB9XG4gIH1cbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYS1tYWRlL3RlYS1tYWRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tea-made',\n  templateUrl: './tea-made.component.html',\n  styleUrls: ['./tea-made.component.css']\n})\nexport class TeaMadeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhLXN0b2NrL3RlYS1zdG9jay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvdGVhLXN0b2NrL3RlYS1zdG9jay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-tea-stock',\n  templateUrl: './tea-stock.component.html',\n  styleUrls: ['./tea-stock.component.css']\n})\nexport class TeaStockComponent implements OnInit {\n  startdate: any;\n  displayedColumns: string[];\n  dataSource: TeaStock;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.displayedColumns = ['Grade', 'Kg' ];\n\n    const url = 'http://127.0.0.1:5000/teastock?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: TeaStock) => {\n    this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/teastock?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: TeaStock) => {\n      this.dataSource = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n      this.startdate = event.value;\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n    }\n    \n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n}\n\nexport interface TeaStock {\n  Grade: string;\n  Kg: number;\n}\n","export default \"button {\\n    cursor: pointer;\\n    margin: 10px;\\n}\\n\\n.container {\\n    margin: 20px 20px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.mat-grid-list {\\n    width: 60%;\\n    height: 50%;\\n}\\n\\n.file-input {\\n    cursor: pointer;\\n}\\n\\ninput[type=file]::-webkit-file-upload-button {\\n    cursor: pointer;\\n    border: none;\\n    background-color: inherit;\\n    padding: 10px;\\n    outline: none;\\n}\\n\\n.email-controller {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    padding-top: 50px;\\n}\\n\\n.mat-flat-button {\\n    margin-top: 50px;\\n    padding: 0px 20px;\\n    border-radius: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBsb2FkLWZpbGUvdXBsb2FkLWZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZC1maWxlL3VwbG9hZC1maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5jb250YWluZXIge1xuICAgIG1hcmdpbjogMjBweCAyMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubWF0LWdyaWQtbGlzdCB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBoZWlnaHQ6IDUwJTtcbn1cblxuLmZpbGUtaW5wdXQge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaW5wdXRbdHlwZT1maWxlXTo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG91dGxpbmU6IG5vbmU7XG59XG5cbi5lbWFpbC1jb250cm9sbGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDUwcHg7XG59XG5cbi5tYXQtZmxhdC1idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgcGFkZGluZzogMHB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.css']\n})\nexport class UploadFileComponent implements OnInit {\n\n  fileToUpload: File = null;\n  database: string;\n  isUploading = false;\n  isMailSending = false;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  uploadFileToServer() {\n    this.isUploading = true;\n    const url = 'http://127.0.0.1:5000/upload?table=' + this.database;\n    const formData: FormData = new FormData();\n    formData.append('file', this.fileToUpload, this.fileToUpload.name);\n    this.http.post(url, formData).subscribe(\n      (result: Result) => {\n        this.isUploading = false;\n        this.openSnackBar(result.message, 'Success');\n      }, (error: Response) => {\n        this.isUploading = false;\n        this.openSnackBar('Something went wrong', 'Error');\n        console.log(error);\n      }\n    );\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n  emailReportHandler() {\n    this.isMailSending = true;\n    const url = 'http://127.0.0.1:5000/email-report';\n    this.http.post(url, {}).subscribe(\n      result => {\n        this.isMailSending = false;\n        this.openSnackBar('Email report generation initiated', 'success');\n      }, error => {\n        this.isMailSending = false;\n        this.openSnackBar('Something went wrong', 'Error');\n      }\n    );\n  }\n\n}\n\nexport interface Result {\n  message: string;\n}\n","\nexport const environment = {\n  production: false,\n  url: 'http://127.0.0.1:5000/'\n};\n\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}