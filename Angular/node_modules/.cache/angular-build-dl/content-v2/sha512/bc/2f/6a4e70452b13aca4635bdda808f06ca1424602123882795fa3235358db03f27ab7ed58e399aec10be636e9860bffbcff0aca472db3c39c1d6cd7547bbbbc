{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/cultivation-grp/cultivation-grp.component.html","src/app/cultivation/cultivation.component.html","src/app/daily-report/daily-report.component.html","src/app/factory/factory.component.html","src/app/fine-leaf/fine-leaf.component.html","src/app/fuel-report/fuel-report.component.html","src/app/grade-per/grade-per.component.html","src/app/invoice-list/invoice-list.component.html","src/app/mnd-deployment/mnd-deployment.component.html","src/app/plucking-grp/plucking-grp.component.html","src/app/plucking/plucking.component.html","src/app/shared/spinner/spinner.component.html","src/app/tea-made/tea-made.component.html","src/app/tea-stock/tea-stock.component.html","src/app/upload-file/upload-file.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/cultivation-grp/cultivation-grp.component.css","src/app/cultivation-grp/cultivation-grp.component.ts","src/app/cultivation/cultivation.component.css","src/app/cultivation/cultivation.component.ts","src/app/daily-report/daily-report.component.css","src/app/daily-report/daily-report.component.ts","src/app/factory/factory.component.css","src/app/factory/factory.component.ts","src/app/fine-leaf/fine-leaf.component.css","src/app/fine-leaf/fine-leaf.component.ts","src/app/fuel-report/fuel-report.component.css","src/app/fuel-report/fuel-report.component.ts","src/app/grade-per/grade-per.component.css","src/app/grade-per/grade-per.component.ts","src/app/invoice-list/invoice-list.component.css","src/app/invoice-list/invoice-list.component.ts","src/app/material-module.ts","src/app/mnd-deployment/mnd-deployment.component.css","src/app/mnd-deployment/mnd-deployment.component.ts","src/app/plucking-grp/plucking-grp.component.css","src/app/plucking-grp/plucking-grp.component.ts","src/app/plucking/plucking.component.css","src/app/plucking/plucking.component.ts","src/app/shared/spinner/spinner.component.css","src/app/shared/spinner/spinner.component.ts","src/app/tea-made/tea-made.component.css","src/app/tea-made/tea-made.component.ts","src/app/tea-stock/tea-stock.component.css","src/app/tea-stock/tea-stock.component.ts","src/app/upload-file/upload-file.component.css","src/app/upload-file/upload-file.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"min-height: 50px !important; height: 50px !important;\\\">\\n  <mat-toolbar-row>\\n    <button mat-icon-button class=\\\"example-icon\\\" aria-label=\\\"Example icon-button with menu icon\\\" (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"hideSideDrawer\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <h1 class=\\\"toolbar-heading\\\">\\n      <a [routerLink]=\\\"'/home'\\\" [routerLinkActive]=\\\"['active']\\\" >Glenburn MIS</a>\\n    </h1>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-sidenav-container>\\n  <mat-sidenav #drawer [mode]=\\\"hideSideDrawer ? 'over' : 'side'\\\" [opened] = \\\"hideSideDrawer ? false : true \\\">\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\\"'/home'\\\" [routerLinkActive]=\\\"['active']\\\"> Daily Report </a>\\n      <a mat-list-item [routerLink]=\\\"'/cultdaily'\\\" [routerLinkActive]=\\\"['active']\\\"> Cultivation </a>\\n      <a mat-list-item [routerLink]=\\\"'/cultgroup'\\\" [routerLinkActive]=\\\"['active']\\\"> Cultivation Group </a>\\n      <a mat-list-item [routerLink]=\\\"'/pluckdaily'\\\" [routerLinkActive]=\\\"['active']\\\"> Plucking </a>\\n      <a mat-list-item [routerLink]=\\\"'/pluckgroup'\\\" [routerLinkActive]=\\\"['active']\\\"> Plucking Group </a>\\n      <a mat-list-item [routerLink]=\\\"'/mnddeploy'\\\" [routerLinkActive]=\\\"['active']\\\"> Mnd Deployment </a>\\n      <a mat-list-item [routerLink]=\\\"'/fuelreport'\\\" [routerLinkActive]=\\\"['active']\\\"> Fuel Report </a>\\n      <a mat-list-item [routerLink]=\\\"'/teastock'\\\" [routerLinkActive]=\\\"['active']\\\"> Tea Stock </a>\\n      <a mat-list-item [routerLink]=\\\"'/factory'\\\" [routerLinkActive]=\\\"['active']\\\"> Factory </a>\\n      <a mat-list-item [routerLink]=\\\"'/teamade'\\\" [routerLinkActive]=\\\"['active']\\\"> Tea Made </a>\\n      <a mat-list-item [routerLink]=\\\"'/fineleaf'\\\" [routerLinkActive]=\\\"['active']\\\"> Green Leaf </a>\\n      <a mat-list-item [routerLink]=\\\"'/gradeper'\\\" [routerLinkActive]=\\\"['active']\\\"> Grade Per </a>\\n      <a mat-list-item [routerLink]=\\\"'/invoicelist'\\\" [routerLinkActive]=\\\"['active']\\\"> Invoice List </a>\\n      <a mat-list-item [routerLink]=\\\"'/upload-csv'\\\" [routerLinkActive]=\\\"['active']\\\"> Upload File </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <div style=\\\"height: 33rem;\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","export default \"<div class=\\\"example-container heading-wrap\\\">\\n  <div class=\\\"heading\\\">\\n    <h3>Cultivation Group Reports</h3>\\n  </div>\\n  <div class=\\\"control-wrap\\\">\\n    <div class=\\\"datepicker-control\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n  </div>\\n</div>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n    \\n    <ng-container matColumnDef=\\\"Job_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Job Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.Job_Name }} </td>\\n      <td mat-footer-cell *matFooterCellDef>Toatl</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"AreaCovered\\\">\\n      <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Mandays\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"MndArea\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','MndArea') | number}}</td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n  \\n      <!-- header -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <!-- data -->\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <!-- footer -->\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  </table>\\n</div>\\n  \\n  \\n  <!-- Compare section -->\\n<div class=\\\"example-container heading-wrap\\\">\\n  <h3>Comparision table</h3>\\n  <div class=\\\"control-wrap\\\">\\n    <div class=\\\"datepicker-control\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n  </div>\\n</div>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n      <ng-container matColumnDef=\\\"Job_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Job Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.Job_Name }} </td>\\n      <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n        <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MndArea\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','MndArea') | number}}</td>\\n      </ng-container>\\n\\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>    \\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n\\n    </table>\\n</div>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\">\\n  <mat-grid-tile colspan=\\\"1\\\">\\n    <h3>Cultivation reports</h3>\\n  </mat-grid-tile>\\n  <mat-grid-tile colspan=\\\"2\\\">\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n        (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n        (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"Date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n      <td mat-footer-cell *matFooterCellDef>Total</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"AreaCovered\\\">\\n      <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Division\\\">\\n      <th mat-header-cell *matHeaderCellDef> Division </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Job_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Mandays\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n      <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Mnd/Area\\\">\\n      <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mnd_Area}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Section_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Squad_Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n      <td mat-footer-cell *matFooterCellDef></td>\\n    </ng-container>\\n\\n    <!-- header -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <!-- data -->\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <!-- footer -->\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  </table>\\n</div>\\n\\n<!-- Compare section -->\\n<div>\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"80px\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Comparision table</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n          (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Go</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n      <ng-container matColumnDef=\\\"Date\\\">\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n        <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Division\\\">\\n        <th mat-header-cell *matHeaderCellDef> Division </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Job_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Mnd/Area\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mnd_Area}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Section_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Squad_Name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n</div>\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile [colspan]=\\\"stackGrid ? 3 : 1\\\">\\n      <h3>Daily Reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"stackGrid ? 3 : 2\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\" style=\\\"width: 100px !important;\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n\\n\\n<h3 class=\\\"table-heading\\\">Tea Made</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"teaMadeData\\\">\\n\\n        <ng-container matColumnDef=\\\"TMToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodate') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodateLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodateLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodateLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery To date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryTodate') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: teaMadeColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Green Leaf Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"greenleafData\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLTodayLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"FineLeaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','FineLeaf') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: greenLeafColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Grade Per Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"gradePerData\\\">\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n            <th mat-header-cell *matHeaderCellDef> Grade </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Qnty\\\">\\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Qnty}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('gradePerData','Qnty') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Percent\\\">\\n            <th mat-header-cell *matHeaderCellDef> Percent </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Percent | number: '1.2-2' }} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: GradePerColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Mandays Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"MandaysData\\\">\\n\\n        <ng-container matColumnDef=\\\"Job_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('MandaysData','Mandays') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"MandaysColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: MandaysColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"MandaysColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Plucking Data</h3>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"PluckingData\\\" class=\\\"col-10\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Section_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Squad_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','Mandays') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Greenleaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','Greenleaf') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"AreaCovered\\\">\\n            <th mat-header-cell *matHeaderCellDef> AreaCovered </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','AreaCovered') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlMnd\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Mnd </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlMnd}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','GlMnd') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','GlHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"MndHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mnd Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','MndHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Prune\\\">\\n            <th mat-header-cell *matHeaderCellDef> Prune </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Prune}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Jat\\\">\\n            <th mat-header-cell *matHeaderCellDef> Jat </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Jat}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"SecArea\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Area </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SecArea}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('PluckingData','SecArea') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"PluckingColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: PluckingColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"PluckingColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n\\n<h3 class=\\\"table-heading\\\">Cultivation Data</h3>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"CultivationData\\\" class=\\\"col-10\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"AreaCovered\\\">\\n            <th mat-header-cell *matHeaderCellDef> Area covered </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('CultivationData','AreaCovered') | number}}</td>\\n          </ng-container>\\n    \\n      \\n          <ng-container matColumnDef=\\\"Job_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('CultivationData','Mandays') | number}}</td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Mnd/Area\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mnd/Area </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('CultivationData','MndArea') | number}}</td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Section_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n      \\n          <ng-container matColumnDef=\\\"Squad_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n          </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"CultivationColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: CultivationColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"CultivationColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Fuel Report Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"FuelReportData\\\">\\n\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"Machine\\\">\\n            <th mat-header-cell *matHeaderCellDef>Machine</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Machine}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n        \\n            <!-- Fuel used Column -->\\n        <ng-container matColumnDef=\\\"FuelUsed\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fuel Used </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FuelUsed}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('FuelReportData','FuelUsed') | number}}</td>\\n        </ng-container>\\n\\n            <!-- TM Column -->\\n        <ng-container matColumnDef=\\\"TM\\\">\\n            <th mat-header-cell *matHeaderCellDef> Tea Made </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TM}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('FuelReportData','TM') | number}}</td>\\n        </ng-container>\\n\\n            <!-- TM Fuel Column -->\\n        <ng-container matColumnDef=\\\"TMFuel\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Fuel </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMFuel}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('FuelReportData','TMFuel') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"FuelReportColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: FuelReportColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"FuelReportColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Factory reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"date\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n\\n\\n<h3 class=\\\"table-heading\\\">Tea Made</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"teaMadeData\\\">\\n\\n        <ng-container matColumnDef=\\\"TMToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodate') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TMTodateLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> TM Todate LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMTodateLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','TMTodateLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"RecoveryTodate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Recovery To date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.RecoveryTodate}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('teaMadeData','RecoveryTodate') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: teaMadeColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"teaMadeColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Green Leaf Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"greenleafData\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLToday') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','GLTodayLY') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"FineLeaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('greenleafData','FineLeaf') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: greenLeafColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"greenLeafColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n<h3 class=\\\"table-heading\\\">Garde Per Data</h3>\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"gradePerData\\\">\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n            <th mat-header-cell *matHeaderCellDef> Grade </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Qnty\\\">\\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Qnty}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('gradePerData','Qnty') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Percent\\\">\\n            <th mat-header-cell *matHeaderCellDef> Percent </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Percent | number: '1.2-2' }} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: GradePerColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"GradePerColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Green Leaf reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n      <ng-container matColumnDef=\\\"Division\\\">\\n          <th mat-header-cell *matHeaderCellDef> Division </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GLToday\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSource','GLToday') | number }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSource','GLTodayLY') | number }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"FineLeaf\\\">\\n          <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSource','FineLeaf') | number }}</td>\\n      </ng-container>\\n\\n    <!-- header -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <!-- data -->\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <!-- footer -->\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  </table>\\n</div>\\n  \\n<!-- Compare section -->\\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"80px\\\" class=\\\"example-container col-5\\\">\\n  <mat-grid-tile colspan=\\\"1\\\">\\n    <h3>Comparision table</h3>\\n  </mat-grid-tile>\\n  <mat-grid-tile colspan=\\\"2\\\">\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n        (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field style=\\\"width: 100px !important;\\\">\\n      <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n        (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n    </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GLToday\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLToday}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSourceCmp','GLToday') | number }}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GLTodayLY\\\">\\n            <th mat-header-cell *matHeaderCellDef> GL Today LY </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLTodayLY}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSourceCmp','GLTodayLY') | number }}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"FineLeaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fine Leaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FineLeaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{ getTotal('dataSourceCmp','FineLeaf') | number }}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\\n\"","export default \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"60px\\\">\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <h1>Fuel Report</h1>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"container\\\">\\n  <div class=\\\"example-container\\\">\\n    <h3>Report</h3>\\n    <div class=\\\"control-wrap\\\">\\n      <div class=\\\"date-picker\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n            (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n            (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </div>\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n    \\n        <!-- Machine Column -->\\n        <ng-container matColumnDef=\\\"Machine\\\">\\n        <th mat-header-cell *matHeaderCellDef> Machine </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Machine}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <!-- Fuel used Column -->\\n        <ng-container matColumnDef=\\\"FuelUsed\\\">\\n        <th mat-header-cell *matHeaderCellDef> Fuel Used </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FuelUsed}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','FuelUsed') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Column -->\\n        <ng-container matColumnDef=\\\"TM\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TM}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','TM') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Fuel Column -->\\n        <ng-container matColumnDef=\\\"TMFuel\\\" class=\\\"mat-elevation-z8\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM Fuel </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMFuel}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','TMFuel') | number}}</td>\\n        </ng-container>\\n    \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n\\n  <div class=\\\"example-container\\\">\\n    <h3>Compare</h3>\\n    <div class=\\\"control-wrap\\\">\\n      <div class=\\\"date-picker\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n    </div>\\n\\n    <table mat-table [dataSource]=\\\"dataSourceCmp\\\" class=\\\"mat-elevation-z8\\\">\\n    \\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"Machine\\\">\\n        <th mat-header-cell *matHeaderCellDef>Machine</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Machine}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <!-- Fuel used Column -->\\n        <ng-container matColumnDef=\\\"FuelUsed\\\">\\n          <th mat-header-cell *matHeaderCellDef> Fuel Used </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FuelUsed}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','FuelUsed') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Column -->\\n        <ng-container matColumnDef=\\\"TM\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TM}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','TM') | number}}</td>\\n        </ng-container>\\n\\n        <!-- TM Fuel Column -->\\n        <ng-container matColumnDef=\\\"TMFuel\\\">\\n          <th mat-header-cell *matHeaderCellDef> TM Fuel </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TMFuel}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','TMFuel') | number}}</td>\\n        </ng-container>\\n    \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n</div>\\n  \\n  \\n\"","export default \"<p>grade-per works!</p>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Invoice reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"InvNo\\\">\\n        <th mat-header-cell *matHeaderCellDef> InvNo </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.InvNo}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n        <th mat-header-cell *matHeaderCellDef> Grade </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"NetWt\\\">\\n        <th mat-header-cell *matHeaderCellDef> Net Wt </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NetWt}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','NetWt') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Papersacks\\\">\\n        <th mat-header-cell *matHeaderCellDef> Paper Sacks </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Papersacks}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Papersacks') | number}}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Packdate\\\">\\n        <th mat-header-cell *matHeaderCellDef> Packdate </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Packdate}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\"","export default \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n  <mat-grid-tile colspan=\\\"2\\\">\\n    <h1>Mnd Deployment</h1>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <h3>Report Table</h3>\\n  </mat-grid-tile >\\n  <mat-grid-tile>\\n    <h3>Compare Table</h3>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"500px\\\">\\n  <mat-grid-tile>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <div class=\\\"control-wrap\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n            (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n            (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n      </div>\\n\\n      <table mat-table [dataSource]=\\\"dataSource\\\">\\n      \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"Job_Name\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Job Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n          </ng-container>\\n      \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n          </ng-container>\\n      \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n\\n      </table>\\n    </div>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <div class=\\\"control-wrap\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n    \\n        <mat-form-field style=\\\"width: 100px !important;\\\"> \\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n      </div>\\n\\n\\n      <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n      \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"Job_Name\\\">\\n          <th mat-header-cell *matHeaderCellDef>Job Name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Job_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n          </ng-container>\\n      \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n          </ng-container>\\n      \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      </table>\\n    </div>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n\"","export default \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"90px\\\">\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <h3>Plucking Group Reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n        <mat-form-field appearance=\\\"fill\\\">\\n            <mat-label>Select a group</mat-label>\\n            <mat-select [(value)]=\\\"selected\\\">\\n              <mat-option>None</mat-option>\\n              <mat-option value=\\\"Section\\\">Section</mat-option>\\n              <mat-option value=\\\"Division\\\">Division</mat-option>\\n              <mat-option value=\\\"Squad\\\">Squad</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n    \\n    <ng-container [matColumnDef]=\\\"group === 'Section' ? 'Section_Name' : group === 'Division' ? 'Division' : 'Squad' \\\">\\n      <th mat-header-cell *matHeaderCellDef> {{ group === 'Section' ? 'Section Name' : group === 'Division' ? 'Division' : 'Squad' }}</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ group === 'Section' ? element.Section_Name : group === 'Division' ? element.Division : element.Squad }} </td>\\n      <td mat-footer-cell *matFooterCellDef>Total</td>\\n    </ng-container>\\n\\n  \\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Greenleaf\\\">\\n        <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Greenleaf') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n        <th mat-header-cell *matHeaderCellDef> Area Covered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"GLMnd\\\">\\n        <th mat-header-cell *matHeaderCellDef> GL Mnd </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLMnd}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GLMnd') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"GLArea\\\">\\n        <th mat-header-cell *matHeaderCellDef> GL Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLArea}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GLArea') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MndArea\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mnd Area </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','MndArea') | number}}</td>\\n      </ng-container>\\n  \\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n  \\n  \\n  <!-- Compare section -->\\n  <div>\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"80px\\\">\\n      <mat-grid-tile colspan=\\\"2\\\">\\n        <h3>Comparision table</h3>\\n      </mat-grid-tile>\\n      <mat-grid-tile colspan=\\\"2\\\">\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Select a group</mat-label>\\n          <mat-select [(value)]=\\\"selectedCmp\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option value=\\\"Section\\\">Section</mat-option>\\n            <mat-option value=\\\"Division\\\">Division</mat-option>\\n            <mat-option value=\\\"Squad\\\">Squad</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  \\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n        <ng-container [matColumnDef]=\\\"groupCmp === 'Section' ? 'Section_Name' : groupCmp === 'Division' ? 'Division' : 'Squad' \\\">\\n          <th mat-header-cell *matHeaderCellDef> {{ groupCmp === 'Section' ? 'Section Name' : groupCmp === 'Division' ? 'Division' : 'Squad' }}</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{ groupCmp === 'Section' ? element.Section_Name : groupCmp === 'Division' ? element.Division : element.Squad }} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Greenleaf\\\">\\n          <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Greenleaf') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"AreaCovered\\\">\\n          <th mat-header-cell *matHeaderCellDef> Area Covered </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"GLMnd\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Mnd </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLMnd}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GLMnd') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"GLArea\\\">\\n          <th mat-header-cell *matHeaderCellDef> GL Area </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GLArea}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GLArea') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"MndArea\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mnd Area </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndArea}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','MndArea') | number}}</td>\\n        </ng-container>\\n  \\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsCmp; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsCmp;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumnsCmp; sticky: true\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Plucking reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddate\\\" disabled\\n          (dateChange)=\\\"dateChange('enddate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n            <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Section_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Squad_Name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Mandays\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Mandays') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"Greenleaf\\\">\\n            <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Greenleaf') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"AreaCovered\\\">\\n            <th mat-header-cell *matHeaderCellDef> AreaCovered </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','AreaCovered') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlMnd\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Mnd </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlMnd}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GlMnd') | number}}</td>\\n        </ng-container>\\n    \\n        <ng-container matColumnDef=\\\"GlHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Gl Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','GlHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"MndHa\\\">\\n            <th mat-header-cell *matHeaderCellDef> Mnd Ha </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndHa}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','MndHa') | number}}</td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Division\\\">\\n            <th mat-header-cell *matHeaderCellDef> Division </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Prune\\\">\\n            <th mat-header-cell *matHeaderCellDef> Prune </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Prune}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"Jat\\\">\\n            <th mat-header-cell *matHeaderCellDef> Jat </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Jat}} </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"SecArea\\\">\\n            <th mat-header-cell *matHeaderCellDef> Section Area </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SecArea}} </td>\\n            <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','SecArea') | number}}</td>\\n        </ng-container>\\n  \\n      <!-- header -->\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <!-- data -->\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- footer -->\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n  </div>\\n  \\n  <!-- Compare section -->\\n  <div>\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"80px\\\">\\n      <mat-grid-tile colspan=\\\"1\\\">\\n        <h3>Comparision table</h3>\\n      </mat-grid-tile>\\n      <mat-grid-tile colspan=\\\"2\\\">\\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('startdateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width: 100px !important;\\\">\\n          <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"End Date\\\" [value]=\\\"enddateCmp\\\" disabled\\n            (dateChange)=\\\"dateChange('enddateCmp', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGoCompare()\\\">Compare</button>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  \\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSourceCmp\\\">\\n\\n        <ng-container matColumnDef=\\\"Date\\\">\\n          <th mat-header-cell *matHeaderCellDef> Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Date}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Section_Name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Section Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Squad_Name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Squad Name </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Squad_Name}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Mandays\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mandays </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Mandays}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Mandays') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Greenleaf\\\">\\n          <th mat-header-cell *matHeaderCellDef> Greenleaf </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Greenleaf}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','Greenleaf') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"AreaCovered\\\">\\n          <th mat-header-cell *matHeaderCellDef> AreaCovered </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AreaCovered}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','AreaCovered') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GlMnd\\\">\\n          <th mat-header-cell *matHeaderCellDef> Gl Mnd </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlMnd}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GlMnd') | number}}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"GlHa\\\">\\n          <th mat-header-cell *matHeaderCellDef> Gl Ha </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GlHa}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','GlHa') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MndHa\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mnd Ha </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.MndHa}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','MndHa') | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Division\\\">\\n          <th mat-header-cell *matHeaderCellDef> Division </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Division}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Prune\\\">\\n          <th mat-header-cell *matHeaderCellDef> Prune </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Prune}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Jat\\\">\\n          <th mat-header-cell *matHeaderCellDef> Jat </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Jat}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"SecArea\\\">\\n          <th mat-header-cell *matHeaderCellDef> Section Area </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SecArea}} </td>\\n          <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSourceCmp','SecArea') | number}}</td>\\n      </ng-container>\\n  \\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n\"","export default \"<div class=\\\"lds-roller\\\">\\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\\n</div>\"","export default \"<p>tea-made works!</p>\\n\"","export default \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"90px\\\" class=\\\"example-container col-5\\\">\\n    <mat-grid-tile colspan=\\\"1\\\">\\n      <h3>Tea Stock reports</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile colspan=\\\"2\\\">\\n      <mat-form-field style=\\\"width: 100px !important;\\\">\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startdate\\\" disabled\\n          (dateChange)=\\\"dateChange('startdate', $event)\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n      </mat-form-field>\\n  \\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"clickedGo()\\\">Go</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n  \\n<div class=\\\"example-container mat-elevation-z8 col-5\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"Grade\\\">\\n        <th mat-header-cell *matHeaderCellDef> Grade </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Grade}} </td>\\n        <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Kg\\\">\\n        <th mat-header-cell *matHeaderCellDef> Kg </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Kg}} </td>\\n        <td mat-footer-cell *matFooterCellDef>{{getTotal('dataSource','Kg') | number}}</td>\\n        </ng-container>\\n\\n        <!-- header -->\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <!-- data -->\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <!-- footer -->\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    </table>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n    <mat-grid-list class=\\\"mat-elevation-z8\\\" cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile>\\n            <mat-form-field appearance=\\\"fill\\\">\\n                <mat-label>Select an option</mat-label>\\n                <mat-select [(value)]=\\\"database\\\">\\n                    <mat-option value=\\\"Jobtab\\\">JobTab</mat-option>\\n                    <mat-option value=\\\"TMEntry\\\">TMEntry</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile>\\n            <div matRipple>\\n                <button mat-raised-button color=\\\"accent\\\">\\n                    <input class=\\\"file-input\\\" type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n                </button>\\n            </div>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"!isUploading\\\">\\n            <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"uploadFileToServer()\\\" [disabled]=\\\"!database\\\">Upload</button>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\" *ngIf=\\\"isUploading\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n        <button mat-flat-button color=\\\"accent\\\" (click)=\\\"emailReportHandler()\\\" *ngIf=\\\"!isMailSending\\\">Email Report</button>\\n    <div class=\\\"email-controller\\\" *ngIf=\\\"isMailSending\\\">\\n        <app-spinner></app-spinner>\\n    </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// componets\nimport { CultivationComponent } from './cultivation/cultivation.component';\nimport { CultivationGrpComponent } from './cultivation-grp/cultivation-grp.component';\nimport { PluckingComponent } from './plucking/plucking.component';\nimport { PluckingGrpComponent } from './plucking-grp/plucking-grp.component';\nimport { MndDeploymentComponent } from './mnd-deployment/mnd-deployment.component';\nimport { FuelReportComponent } from './fuel-report/fuel-report.component';\nimport { TeaStockComponent } from './tea-stock/tea-stock.component';\nimport { TeaMadeComponent } from './tea-made/tea-made.component';\nimport { FineLeafComponent } from './fine-leaf/fine-leaf.component';\nimport { GradePerComponent } from './grade-per/grade-per.component';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { FactoryComponent } from './factory/factory.component';\nimport { DailyReportComponent } from './daily-report/daily-report.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: DailyReportComponent },\n  { path: 'cultdaily', component: CultivationComponent },\n  { path: 'cultgroup', component: CultivationGrpComponent },\n  { path: 'pluckdaily', component: PluckingComponent },\n  { path: 'pluckgroup', component: PluckingGrpComponent },\n  { path: 'mnddeploy', component: MndDeploymentComponent },\n  { path: 'fuelreport', component: FuelReportComponent },\n  { path: 'teastock', component: TeaStockComponent },\n  { path: 'teamade', component: TeaMadeComponent },\n  { path: 'fineleaf', component: FineLeafComponent},\n  { path: 'gradeper', component: GradePerComponent},\n  { path: 'invoicelist', component: InvoiceListComponent},\n  { path: 'upload-csv', component: UploadFileComponent},\n  { path: 'factory', component: FactoryComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".mat-drawer-container {\\n    height: 92vh;\\n}\\n\\n.toolbar-heading a {\\n    text-decoration: none;\\n    color: white;\\n}\\n\\n.mat-nav-list {\\n    background-color: #70a452;\\n}\\n\\n.mat-toolbar-row {\\n    text-align: center;\\n}\\n\\n.mat-list-base {\\n    padding: 0 !important;\\n}\\n\\n.mat-list-item {\\n    color: white;\\n    font-weight: bolder;\\n}\\n\\n.mat-list-item:hover {\\n    background-color: white;\\n    color: #70a452;\\n}\\n\\n.mat-list-item.active {\\n    background-color: white;\\n    color: #4caf50;\\n} \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kcmF3ZXItY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDkydmg7XG59XG5cbi50b29sYmFyLWhlYWRpbmcgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cblxuLm1hdC1uYXYtbGlzdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzcwYTQ1Mjtcbn1cblxuLm1hdC10b29sYmFyLXJvdyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubWF0LWxpc3QtYmFzZSB7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWxpc3QtaXRlbSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi5tYXQtbGlzdC1pdGVtOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzcwYTQ1Mjtcbn1cblxuLm1hdC1saXN0LWl0ZW0uYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzRjYWY1MDtcbn0gIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  title = 'glen-mis-ui-angular';\n  hideSideDrawer = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private breakPointObserver: BreakpointObserver) {}\n\n  ngOnInit() {\n    this.mediaSubscription = this.breakPointObserver.observe([\n      '(max-width: 850px)'\n        ]).subscribe(result => {\n          if (result.matches === true) {\n            this.hideSideDrawer = true;\n          } else {\n            this.hideSideDrawer = false;\n          }\n    });\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material-module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// components\nimport { CultivationComponent } from './cultivation/cultivation.component';\nimport { CultivationGrpComponent } from './cultivation-grp/cultivation-grp.component';\nimport { PluckingComponent } from './plucking/plucking.component';\nimport { PluckingGrpComponent } from './plucking-grp/plucking-grp.component';\nimport { MndDeploymentComponent } from './mnd-deployment/mnd-deployment.component';\nimport { FuelReportComponent } from './fuel-report/fuel-report.component';\nimport { TeaStockComponent } from './tea-stock/tea-stock.component';\nimport { TeaMadeComponent } from './tea-made/tea-made.component';\nimport { FineLeafComponent } from './fine-leaf/fine-leaf.component';\nimport { GradePerComponent } from './grade-per/grade-per.component';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { FactoryComponent } from './factory/factory.component';\nimport { SpinnerComponent } from './shared/spinner/spinner.component';\nimport { DailyReportComponent } from './daily-report/daily-report.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CultivationComponent,\n    CultivationGrpComponent,\n    PluckingComponent,\n    PluckingGrpComponent,\n    MndDeploymentComponent,\n    FuelReportComponent,\n    TeaStockComponent,\n    TeaMadeComponent,\n    FineLeafComponent,\n    GradePerComponent,\n    InvoiceListComponent,\n    UploadFileComponent,\n    FactoryComponent,\n    SpinnerComponent,\n    DailyReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.heading-wrap {\\n  width: 65%;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.control-wrap {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.datepicker-control {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n@media(max-width: 700px) {\\n  .col-5 {\\n    width: 100%;\\n  }\\n\\n  .control-wrap {\\n    flex-direction: column;\\n  }\\n\\n  .datepicker-control {\\n    flex-direction: column;\\n  }\\n\\n  .heading-wrap {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VsdGl2YXRpb24tZ3JwL2N1bHRpdmF0aW9uLWdycC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jdWx0aXZhdGlvbi1ncnAvY3VsdGl2YXRpb24tZ3JwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmhlYWRpbmctd3JhcCB7XG4gIHdpZHRoOiA2NSU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmNvbnRyb2wtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGF0ZXBpY2tlci1jb250cm9sIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG5AbWVkaWEobWF4LXdpZHRoOiA3MDBweCkge1xuICAuY29sLTUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmNvbnRyb2wtd3JhcCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5kYXRlcGlja2VyLWNvbnRyb2wge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuaGVhZGluZy13cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-cultivation-grp',\n  templateUrl: './cultivation-grp.component.html',\n  styleUrls: ['./cultivation-grp.component.css']\n})\nexport class CultivationGrpComponent implements OnInit, OnDestroy {\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: any;\n  dataSource: any;\n  dataSourceCmp: any;\n  stackGrid = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private http: HttpClient, private breakPointObserver: BreakpointObserver) {\n  }\n\n  ngOnInit() {\n\tthis.startdate = new Date();\n\tthis.enddate = new Date();\n\tthis.startdate.setDate(this.startdate.getDate() - 1);\n\tthis.startdateCmp = this.startdate;\n\tthis.enddateCmp = this.enddate;\n\tthis.displayedColumns = ['Job_Name', 'Mandays', 'AreaCovered', 'MndArea'];\n\n\tconst url = 'http://127.0.0.1:5000/cultgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\tthis.http.get(url).subscribe((data: CultivationGroupByJob) => {\n\t\tthis.dataSource = data;\n\t\t});\n\n\tthis.mediaWidthHandler();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.mediaSubscription.unsubscribe();\n\t}\n\n\tmediaWidthHandler() {\n\t\tthis.mediaSubscription = this.breakPointObserver.observe([\n\t\t  '(max-width: 700px)'\n\t\t\t]).subscribe(result => {\n\t\t\t  if (result.matches === true) {\n\t\t\t\tthis.stackGrid = true;\n\t\t\t  } else {\n\t\t\t\tthis.stackGrid = false;\n\t\t\t  }\n\t\t});\n\t  }\n\n\tclickedGo() {\n\t\tconst url = 'http://127.0.0.1:5000/cultgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\t\tthis.http.get(url).subscribe((data: CultivationGroupByJob) => {\n\t\tthis.dataSource = data;\n\t\t});\n\t}\n\n\tclickedGoCompare() {\n\t\tconst url = 'http://127.0.0.1:5000/cultgroup?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n\t\tthis.http.get(url).subscribe((data: CultivationGroupByJob) => {\n\t\t\tthis.dataSourceCmp = data;\n\t\t});\n\t}\n\n\tdateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n\t\tswitch (type) {\n\t\t\tcase 'startdate': this.startdate = event.value; break;\n\t\t\tcase 'enddate': this.enddate = event.value; break;\n\t\t\tcase 'startdateCmp': this.startdateCmp = event.value; break;\n\t\t\tcase 'enddateCmp': this.enddateCmp = event.value; break;\n\t\t}\n\t}\n\n\tconvert(str) {\n\t\tvar date = new Date(str),\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\").toString();\n\t}\n\n\tgetTotal(_dataSrc: string, _field: string) {\n\t\tif (this[_dataSrc]) {\n\t\t\treturn this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport interface CultivationGroupByJob {\n\tJob_Name: string;\n\tMandays: number;\n\tAreaCovered: number;\n\tMndArea: number;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VsdGl2YXRpb24vY3VsdGl2YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGNBQWM7RUFDZCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2N1bHRpdmF0aW9uL2N1bHRpdmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbC01e1xuICB3aWR0aDogNjUlO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n\tselector: 'app-cultivation',\n\ttemplateUrl: './cultivation.component.html',\n\tstyleUrls: ['./cultivation.component.css']\n})\nexport class CultivationComponent implements OnInit {\n\n\tstartdate; enddate; startdateCmp; enddateCmp; displayedColumns; dataSource; dataSourceCmp;\n\n\t//dev purpose\n\t//_startdate = '2020-07-01';\n\t//_enddate = '2020-07-14';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tngOnInit() {\n\t\tthis.startdate = new Date();\n\t\tthis.enddate = new Date();\n\t\tthis.startdate.setDate(this.startdate.getDate() - 1);\n\t\tthis.startdateCmp = this.startdate;\n\t\tthis.enddateCmp = this.enddate;\n\t\tthis.displayedColumns = ['Date', 'Division', 'AreaCovered', 'Job_Name', 'Mandays', 'Mnd/Area', 'Section_Name', 'Squad_Name'];\n\n\t\tconst url = 'http://127.0.0.1:5000/cultdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\t\t//dev purpose\n\t\t//const url = 'http://127.0.0.1:5000/cultdaily?start=' + this._startdate + '&end=' + this._enddate;\n\t\tthis.http.get(url).subscribe((data: ICultivation) => {\n\t\t\tthis.dataSource = data;\n\t\t});\n\t}\n\n\tclickedGo() {\n\t\tconst url = 'http://127.0.0.1:5000/cultdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n\t\t//dev purpose\n\t\t//const url = 'http://127.0.0.1:5000/cultdaily?start=' + this._startdate + '&end=' + this._enddate;\n\t\tthis.http.get(url).subscribe((data: ICultivation) => {\n\t\t\tthis.dataSource = data;\n\t\t});\n\t}\n\n\tclickedGoCompare() {\n\t\tconst url = 'http://127.0.0.1:5000/cultdaily?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n\t\t//dev purpose\n\t\t//const url = 'http://127.0.0.1:5000/cultdaily?start=' + this._startdate + '&end=' + this._enddate;\n\t\tthis.http.get(url).subscribe((data: ICultivation) => {\n\t\t\tthis.dataSourceCmp = data;\n\t\t});\n\t}\n\n\tgetTotal(_dataSrc: string, _field: string) {\n\t\tif (this[_dataSrc]) {\n\t\t\treturn this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tdateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n\t\tswitch (type) {\n\t\t\tcase 'startdate': this.startdate = event.value; break;\n\t\t\tcase 'enddate': this.enddate = event.value; break;\n\t\t\tcase 'startdateCmp': this.startdateCmp = event.value; break;\n\t\t\tcase 'enddateCmp': this.enddateCmp = event.value; break;\n\t\t}\n\t}\n\n\tconvert(str) {\n\t\tvar date = new Date(str),\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\").toString();\n\t}\n\n}\n\nexport interface ICultivation {\n\tDate: string;\n\tJob_Name: string;\n\tSection_Name: string;\n\tSquad_Name: string;\n\tMandays: number;\n\tAreaCovered: number;\n\tMnd_Area: number;\n\tDivision: string;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\n.col-10 {\\n  min-width: 850px;\\n}\\n\\n.table-heading {\\n  text-align: center !important;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n  overflow: scroll;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\n.mat-form-field {\\n  width: 130px !important;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  border-top: 1px solid #e0e0e0;\\n  background-color: #c0c0c0;\\n}\\n\\n@media(max-width: 700px) {\\n  .col-5 {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFpbHktcmVwb3J0L2RhaWx5LXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsNkJBQTZCO0VBQzdCLHlCQUF5QjtBQUMzQjs7QUFDQTtFQUNFO0lBQ0UsV0FBVztFQUNiO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9kYWlseS1yZXBvcnQvZGFpbHktcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbC01e1xuICB3aWR0aDogNjUlO1xufVxuXG4uY29sLTEwIHtcbiAgbWluLXdpZHRoOiA4NTBweDtcbn1cblxuLnRhYmxlLWhlYWRpbmcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTMwcHggIWltcG9ydGFudDtcbn1cblxudHIubWF0LWZvb3Rlci1yb3cge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLm1hdC10YWJsZS1zdGlja3kge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbn1cbkBtZWRpYShtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIC5jb2wtNSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-daily-report',\n  templateUrl: './daily-report.component.html',\n  styleUrls: ['./daily-report.component.css']\n})\nexport class DailyReportComponent implements OnInit, OnDestroy {\n  startdate: any;\n  teaMadeColumns: string[];\n  greenLeafColumns: string[];\n  GradePerColumns: string[];\n  MandaysColumns: string[];\n  PluckingColumns: string[];\n  CultivationColumns: string[];\n  FuelReportColumns: string[];\n\n  teaMadeData: any;\n  greenleafData: any;\n  gradePerData: any;\n  MandaysData: any;\n  PluckingData: any;\n  CultivationData: any;\n  FuelReportData: any;\n  stackGrid = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private http: HttpClient, private breakPointObserver: BreakpointObserver) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.teaMadeColumns = ['TMToday', 'TMTodate', 'TMTodateLY', 'RecoveryToday', 'RecoveryTodate'];\n    this.greenLeafColumns = ['Division', 'GLToday', 'GLTodayLY', 'FineLeaf'];\n    this.GradePerColumns = ['Grade', 'Qnty', 'Percent'];\n    this.MandaysColumns = ['Job_Name', 'Mandays'];\n    this.PluckingColumns = ['Date', 'Division', 'Section_Name', 'Squad_Name', 'Mandays', 'Greenleaf', 'AreaCovered',\n                            'GlMnd', 'GlHa', 'MndHa', 'Prune', 'Jat', 'SecArea'];\n    this.CultivationColumns = ['Date', 'Division', 'AreaCovered', 'Job_Name', 'Mandays', 'Mnd/Area', 'Section_Name', 'Squad_Name'];\n    this.FuelReportColumns = ['Machine', 'FuelUsed', 'TM', 'TMFuel'];\n\n    const url = 'http://127.0.0.1:5000/dailyreport?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: DailyReport) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n      this.MandaysData = data.Mandays;\n      this.PluckingData = data.Plucking;\n      this.CultivationData = data.Cultivation;\n      this.FuelReportData = data.FuelReport;\n    });\n\n    this.mediaWidthHandler();\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n  mediaWidthHandler() {\n    this.mediaSubscription = this.breakPointObserver.observe([\n      '(max-width: 700px)'\n        ]).subscribe(result => {\n          if (result.matches === true) {\n            this.stackGrid = true;\n          } else {\n            this.stackGrid = false;\n          }\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/dailyreport?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: DailyReport) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n      this.MandaysData = data.Mandays;\n      this.PluckingData = data.Plucking;\n      this.CultivationData = data.Cultivation;\n      this.FuelReportData = data.FuelReport;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n      this.startdate = event.value;\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n}\n\nexport interface DailyReport {\n  Greenleaf: any;\n  TeaMade: any;\n  Mandays: any;\n  Plucking: any;\n  Cultivation: any;\n  GradePer: any;\n  FuelReport: any;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\n.table-heading {\\n  text-align: center !important;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  border-top: 1px solid #e0e0e0;\\n  background-color: #c0c0c0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmFjdG9yeS9mYWN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxjQUFjO0VBQ2QsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFHQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3Qix5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9mYWN0b3J5L2ZhY3RvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLCBidXR0b24ge1xuICAgIG1hcmdpbjogMTBweDtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgbWF4LWhlaWdodDogMzUwcHg7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBtYXgtd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uY29sLTV7XG4gIHdpZHRoOiA2NSU7XG59XG5cblxuLnRhYmxlLWhlYWRpbmcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-factory',\n  templateUrl: './factory.component.html',\n  styleUrls: ['./factory.component.css']\n})\nexport class FactoryComponent implements OnInit {\n\n  date: any;\n  teaMadeColumns: string[];\n  greenLeafColumns: string[];\n  GradePerColumns: string[];\n  teaMadeData: any;\n  greenleafData: any;\n  gradePerData: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.date = new Date();\n    this.date.setDate(this.date.getDate() - 1);\n    this.teaMadeColumns = ['TMToday', 'TMTodate', 'TMTodateLY', 'RecoveryToday', 'RecoveryTodate'];\n    this.greenLeafColumns = ['Division', 'GLToday', 'GLTodayLY', 'FineLeaf'];\n    this.GradePerColumns = ['Grade', 'Qnty', 'Percent'];\n\n    const url = 'http://127.0.0.1:5000/factory?start=' + this.convert(this.date);\n    this.http.get(url).subscribe((data: Factory) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/factory?start=' + this.convert(this.date);\n    this.http.get(url).subscribe((data: Factory) => {\n      this.teaMadeData = data.TeaMade;\n      this.greenleafData = data.Greenleaf;\n      this.gradePerData = data.GradePer;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n      this.date = event.value;\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n}\n\nexport interface Factory {\n  TeaMade: any[];\n  Greenleaf: any[];\n  GradePer: any[];\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluZS1sZWFmL2ZpbmUtbGVhZi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBR0E7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvZmluZS1sZWFmL2ZpbmUtbGVhZi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG59XG5cbnRyLm1hdC1mb290ZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtdGFibGUtc3RpY2t5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-fine-leaf',\n  templateUrl: './fine-leaf.component.html',\n  styleUrls: ['./fine-leaf.component.css']\n})\nexport class FineLeafComponent implements OnInit {\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: string[];\n  dataSource: any;\n  dataSourceCmp: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n    this.displayedColumns = ['Division', 'GLToday', 'GLTodayLY', 'FineLeaf'];\n\n    const url = 'http://127.0.0.1:5000/GL?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: GreenLeaf) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/GL?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: GreenLeaf) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/GL?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: GreenLeaf) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n  \n}\n\nexport interface GreenLeaf {\n  Division: string;\n  GLToday: number;\n  GLTodayLY: number;\n  FineLeaf: number;\n}\n","export default \"mat-form-field, button {\\n    margin: 5px;\\n}\\n\\nh1 {\\n  margin-bottom: 5px;\\n}\\n\\nh3 {\\n  margin-bottom: 10px;\\n}\\n\\n.container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.example-container {\\n  margin: 15px 15px;\\n  box-sizing: border-box;\\n  overflow: auto;\\n  min-width: 271px;\\n  width: 40%;\\n  max-height: 80vh;\\n  margin-bottom: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  align-items: center; \\n}\\n\\n.mat-table {\\n  width: 90%;\\n}\\n\\n.control-wrap {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n@media(max-width: 650px) {\\n  .container {\\n    flex-direction: column;\\n  }\\n\\n  .control-wrap {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnVlbC1yZXBvcnQvZnVlbC1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9mdWVsLXJlcG9ydC9mdWVsLXJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiA1cHg7XG59XG5cbmgxIHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG5oMyB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgbWFyZ2luOiAxNXB4IDE1cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBtaW4td2lkdGg6IDI3MXB4O1xuICB3aWR0aDogNDAlO1xuICBtYXgtaGVpZ2h0OiA4MHZoO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxufVxuXG4ubWF0LXRhYmxlIHtcbiAgd2lkdGg6IDkwJTtcbn1cblxuLmNvbnRyb2wtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG59XG5cbnRyLm1hdC1mb290ZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtdGFibGUtc3RpY2t5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbkBtZWRpYShtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuY29udHJvbC13cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\nexport interface FuelReport {\n  Machine: string;\n  FuelUsed: number;\n  TM: number;\n  TMFuel: number;\n}\n\n@Component({\n  selector: 'app-fuel-report',\n  templateUrl: './fuel-report.component.html',\n  styleUrls: ['./fuel-report.component.css']\n})\nexport class FuelReportComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['Machine', 'FuelUsed', 'TM', 'TMFuel'];\n  dataSource: FuelReport[];\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  dataSourceCmp: FuelReport[];\n\n  mediumDevice = false;\n\n  mediaSubscription: Subscription;\n\n  constructor(private http: HttpClient, private breakPointObserver: BreakpointObserver) { }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n\n    const url = 'http://127.0.0.1:5000/fuelreport?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: FuelReport[]) => {\n      this.dataSource = data;\n    });\n    this.mediaChangeHandler();\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n  mediaChangeHandler() {\n    this.mediaSubscription = this.breakPointObserver.observe([\n      '(max-width: 768px)'\n        ]).subscribe(result => {\n          if (result.matches === true) {\n            this.mediumDevice = true;\n          } else {\n            this.mediumDevice = false;\n          }\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/fuelreport?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: FuelReport[]) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/fuelreport?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: FuelReport[]) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n\t\tif (this[_dataSrc]) {\n\t\t\treturn this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyYWRlLXBlci9ncmFkZS1wZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grade-per',\n  templateUrl: './grade-per.component.html',\n  styleUrls: ['./grade-per.component.css']\n})\nexport class GradePerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZS1saXN0L2ludm9pY2UtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvaW52b2ljZS1saXN0L2ludm9pY2UtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css']\n})\nexport class InvoiceListComponent implements OnInit {\n  startdate: any;\n  enddate: any;\n  displayedColumns: string[];\n  dataSource: Invoice;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.displayedColumns = ['InvNo', 'Grade', 'NetWt', 'Papersacks', 'Packdate'];\n\n    const url = 'http://127.0.0.1:5000/invoicelist?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Invoice) => {\n    this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/invoicelist?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Invoice) => {\n      this.dataSource = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n    }\n\n    getTotal(_dataSrc: string, _field: string) {\n      if (this[_dataSrc]) {\n        return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n      } else {\n        return null;\n      }\n    }\n}\n\nexport interface Invoice {\n  InvNo: string;\n  Grade: string;\n  NetWt: string;\n  Papersacks: string;\n  Packdate: number;\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\nh1 {\\n  margin-bottom: 10px;\\n}\\n\\nh3 {\\n  margin-bottom: 0;\\n}\\n\\n.example-container {\\n  padding: 5px 10px;\\n  box-sizing: border-box;\\n  max-height: 75vh;\\n  width: 75%;\\n  margin-bottom: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  align-items: center;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n}\\n\\n.control-wrap {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.mat-table {\\n  width: 90%;\\n  max-height: 350px;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  border-top: 1px solid #e0e0e0;\\n  background-color: #c0c0c0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW5kLWRlcGxveW1lbnQvbW5kLWRlcGxveW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsNkJBQTZCO0VBQzdCLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL21uZC1kZXBsb3ltZW50L21uZC1kZXBsb3ltZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbmgxIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuaDMge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWF4LWhlaWdodDogNzV2aDtcbiAgd2lkdGg6IDc1JTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmNvbnRyb2wtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubWF0LXRhYmxlIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWF4LWhlaWdodDogMzUwcHg7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGluaXRpYWw7XG59XG5cbnRoIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbn1cblxudHIubWF0LWZvb3Rlci1yb3cge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLm1hdC10YWJsZS1zdGlja3kge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nexport interface MndDeployment {\n  Job_Name: string;\n  Mandays: number;\n}\n\n\n@Component({\n  selector: 'app-mnd-deployment',\n  templateUrl: './mnd-deployment.component.html',\n  styleUrls: ['./mnd-deployment.component.css']\n})\nexport class MndDeploymentComponent implements OnInit {\n\n  displayedColumns: string[] = ['Job_Name', 'Mandays'];\n  dataSource: MndDeployment[];\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  dataSourceCmp: MndDeployment[];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n\n    const url = 'http://127.0.0.1:5000/mnddeploy?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: MndDeployment[]) => {\n      this.dataSource = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/mnddeploy?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: MndDeployment[]) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/mnddeploy?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: MndDeployment[]) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGx1Y2tpbmctZ3JwL3BsdWNraW5nLWdycC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvcGx1Y2tpbmctZ3JwL3BsdWNraW5nLWdycC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-plucking-grp',\n  templateUrl: './plucking-grp.component.html',\n  styleUrls: ['./plucking-grp.component.css']\n})\nexport class PluckingGrpComponent implements OnInit {\n\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: any;\n  displayedColumnsCmp: any;\n  dataSource: any;\n  dataSourceCmp: any;\n  showCompare: boolean;\n  selected: string;\n  selectedCmp: string;\n  group: string;\n  groupCmp: string;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n    this.showCompare = false;\n    this.displayedColumns = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n    this.displayedColumnsCmp = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n    this.selected = 'Division';\n    this.selectedCmp = 'Division';\n    this.group = 'Division';\n    this.groupCmp = 'Division';\n\n    const url = 'http://127.0.0.1:5000/pluckgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate) + '&grpby=' + this.selected;\n    this.http.get(url).subscribe((data: PluckingGroupBySection) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/pluckgroup?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate) + '&grpby=' + this.selected;\n    this.http.get(url).subscribe((data: any) => {\n      this.group = this.selected;\n      if (this.selected === 'Section') {\n        this.displayedColumns = ['Section_Name', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSectionData('report', data);\n      } else if (this.selected === 'Division') {\n        this.displayedColumns = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseDivisionData('report', data);\n      } else {\n        this.displayedColumns = ['Squad', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSquadData('report', data);\n      }\n    });\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/pluckgroup?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp) + '&grpby=' + this.selectedCmp;\n    this.http.get(url).subscribe((data: any) => {\n      this.groupCmp = this.selectedCmp;\n      if (this.selectedCmp === 'Section') {\n        this.displayedColumnsCmp = ['Section_Name', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSectionData('compare', data);\n      } else if (this.selectedCmp === 'Division') {\n        this.displayedColumnsCmp = ['Division', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseDivisionData('compare', data);\n      } else {\n        this.displayedColumnsCmp = ['Squad', 'Mandays', 'Greenleaf', 'AreaCovered', 'GLMnd', 'GLArea', 'MndArea'];\n        this.parseSquadData('compare', data);\n      }\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n  parseDivisionData(type: string, data: PluckingGroupByDivision) {\n    switch (type) {\n      case 'report': this.dataSource = data; break;\n      case 'compare': this.dataSourceCmp = data; break;\n    }\n  }\n\n  parseSectionData(type: string, data: PluckingGroupBySection) {\n    switch (type) {\n      case 'report': this.dataSource = data; break;\n      case 'compare': this.dataSourceCmp = data; break;\n    }\n  }\n\n  parseSquadData(type: string, data: PluckingGroupBySquad) {\n    switch (type) {\n      case 'report': this.dataSource = data; break;\n      case 'compare': this.dataSourceCmp = data; break;\n    }\n  }\n\n}\n\nexport interface PluckingGroupBySection {\n  Section_Name: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GLMnd: number;\n  GLArea: number;\n  MndArea: number;\n}\n\nexport interface PluckingGroupByDivision {\n  Division: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GLMnd: number;\n  GLArea: number;\n  MndArea: number;\n}\n\nexport interface PluckingGroupBySquad {\n  Squad: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GLMnd: number;\n  GLArea: number;\n  MndArea: number;\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGx1Y2tpbmcvcGx1Y2tpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGNBQWM7RUFDZCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL3BsdWNraW5nL3BsdWNraW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbC01e1xuICB3aWR0aDogNjUlO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG59XG5cbnRyLm1hdC1mb290ZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtdGFibGUtc3RpY2t5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MwYzBjMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-plucking',\n  templateUrl: './plucking.component.html',\n  styleUrls: ['./plucking.component.css']\n})\nexport class PluckingComponent implements OnInit {\n  startdate: any;\n  enddate: any;\n  startdateCmp: any;\n  enddateCmp: any;\n  displayedColumns: string[];\n  dataSource: any;\n  dataSourceCmp: any;\n  showCompare: boolean;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.enddate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.startdateCmp = this.startdate;\n    this.enddateCmp = this.enddate;\n    this.showCompare = false;\n    this.displayedColumns = [ 'Date', 'Division', 'Section_Name', 'Squad_Name', 'Mandays', 'Greenleaf',\n                              'AreaCovered', 'GlMnd', 'GlHa', 'MndHa', 'Prune', 'Jat', 'SecArea'];\n\n    const url = 'http://127.0.0.1:5000/pluckdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Plucking) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/pluckdaily?start=' + this.convert(this.startdate) + '&end=' + this.convert(this.enddate);\n    this.http.get(url).subscribe((data: Plucking) => {\n      this.dataSource = data;\n    });\n  }\n\n  clickedCompare() {\n    this.showCompare = true;\n  }\n\n  clickedGoCompare() {\n    const url = 'http://127.0.0.1:5000/pluckdaily?start=' + this.convert(this.startdateCmp) + '&end=' + this.convert(this.enddateCmp);\n    this.http.get(url).subscribe((data: Plucking) => {\n      this.dataSourceCmp = data;\n    });\n  }\n\n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    switch (type) {\n      case 'startdate': this.startdate = event.value; break;\n      case 'enddate': this.enddate = event.value; break;\n      case 'startdateCmp': this.startdateCmp = event.value; break;\n      case 'enddateCmp': this.enddateCmp = event.value; break;\n    }\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n  }\n}\n\nexport interface Plucking {\n  Date: string;\n  Section_Name: string;\n  Squad_Name: string;\n  Mandays: number;\n  Greenleaf: number;\n  AreaCovered: number;\n  GlMnd: number;\n  GlHa: number;\n  MndHa: number;\n  Division: string;\n  Prune: string;\n  Jat: string;\n  SecArea: number;\n}\n","export default \".lds-roller {\\n    display: inline-block;\\n    position: relative;\\n    width: 80px;\\n    height: 80px;\\n  }\\n  .lds-roller div {\\n    -webkit-animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n            animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n    transform-origin: 40px 40px;\\n  }\\n  .lds-roller div:after {\\n    content: \\\" \\\";\\n    display: block;\\n    position: absolute;\\n    width: 7px;\\n    height: 7px;\\n    border-radius: 50%;\\n    background: green;\\n    margin: -4px 0 0 -4px;\\n  }\\n  .lds-roller div:nth-child(1) {\\n    -webkit-animation-delay: -0.036s;\\n            animation-delay: -0.036s;\\n  }\\n  .lds-roller div:nth-child(1):after {\\n    top: 63px;\\n    left: 63px;\\n  }\\n  .lds-roller div:nth-child(2) {\\n    -webkit-animation-delay: -0.072s;\\n            animation-delay: -0.072s;\\n  }\\n  .lds-roller div:nth-child(2):after {\\n    top: 68px;\\n    left: 56px;\\n  }\\n  .lds-roller div:nth-child(3) {\\n    -webkit-animation-delay: -0.108s;\\n            animation-delay: -0.108s;\\n  }\\n  .lds-roller div:nth-child(3):after {\\n    top: 71px;\\n    left: 48px;\\n  }\\n  .lds-roller div:nth-child(4) {\\n    -webkit-animation-delay: -0.144s;\\n            animation-delay: -0.144s;\\n  }\\n  .lds-roller div:nth-child(4):after {\\n    top: 72px;\\n    left: 40px;\\n  }\\n  .lds-roller div:nth-child(5) {\\n    -webkit-animation-delay: -0.18s;\\n            animation-delay: -0.18s;\\n  }\\n  .lds-roller div:nth-child(5):after {\\n    top: 71px;\\n    left: 32px;\\n  }\\n  .lds-roller div:nth-child(6) {\\n    -webkit-animation-delay: -0.216s;\\n            animation-delay: -0.216s;\\n  }\\n  .lds-roller div:nth-child(6):after {\\n    top: 68px;\\n    left: 24px;\\n  }\\n  .lds-roller div:nth-child(7) {\\n    -webkit-animation-delay: -0.252s;\\n            animation-delay: -0.252s;\\n  }\\n  .lds-roller div:nth-child(7):after {\\n    top: 63px;\\n    left: 17px;\\n  }\\n  .lds-roller div:nth-child(8) {\\n    -webkit-animation-delay: -0.288s;\\n            animation-delay: -0.288s;\\n  }\\n  .lds-roller div:nth-child(8):after {\\n    top: 56px;\\n    left: 12px;\\n  }\\n  @-webkit-keyframes lds-roller {\\n    0% {\\n      transform: rotate(0deg);\\n    }\\n    100% {\\n      transform: rotate(360deg);\\n    }\\n  }\\n  @keyframes lds-roller {\\n    0% {\\n      transform: rotate(0deg);\\n    }\\n    100% {\\n      transform: rotate(360deg);\\n    }\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtFQUNkO0VBQ0E7SUFDRSx3RUFBZ0U7WUFBaEUsZ0VBQWdFO0lBQ2hFLDJCQUEyQjtFQUM3QjtFQUNBO0lBQ0UsWUFBWTtJQUNaLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLHFCQUFxQjtFQUN2QjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsK0JBQXVCO1lBQXZCLHVCQUF1QjtFQUN6QjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0UsZ0NBQXdCO1lBQXhCLHdCQUF3QjtFQUMxQjtFQUNBO0lBQ0UsU0FBUztJQUNULFVBQVU7RUFDWjtFQUNBO0lBQ0U7TUFDRSx1QkFBdUI7SUFDekI7SUFDQTtNQUNFLHlCQUF5QjtJQUMzQjtFQUNGO0VBUEE7SUFDRTtNQUNFLHVCQUF1QjtJQUN6QjtJQUNBO01BQ0UseUJBQXlCO0lBQzNCO0VBQ0YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGRzLXJvbGxlciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogODBweDtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2IHtcbiAgICBhbmltYXRpb246IGxkcy1yb2xsZXIgMS4ycyBjdWJpYy1iZXppZXIoMC41LCAwLCAwLjUsIDEpIGluZmluaXRlO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDQwcHggNDBweDtcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogN3B4O1xuICAgIGhlaWdodDogN3B4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kOiBncmVlbjtcbiAgICBtYXJnaW46IC00cHggMCAwIC00cHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCgxKSB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4wMzZzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoMSk6YWZ0ZXIge1xuICAgIHRvcDogNjNweDtcbiAgICBsZWZ0OiA2M3B4O1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoMikge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMDcycztcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDIpOmFmdGVyIHtcbiAgICB0b3A6IDY4cHg7XG4gICAgbGVmdDogNTZweDtcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDMpIHtcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjEwOHM7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCgzKTphZnRlciB7XG4gICAgdG9wOiA3MXB4O1xuICAgIGxlZnQ6IDQ4cHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg0KSB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNDRzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNCk6YWZ0ZXIge1xuICAgIHRvcDogNzJweDtcbiAgICBsZWZ0OiA0MHB4O1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNSkge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMThzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNSk6YWZ0ZXIge1xuICAgIHRvcDogNzFweDtcbiAgICBsZWZ0OiAzMnB4O1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNikge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMjE2cztcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDYpOmFmdGVyIHtcbiAgICB0b3A6IDY4cHg7XG4gICAgbGVmdDogMjRweDtcbiAgfVxuICAubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDcpIHtcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjI1MnM7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg3KTphZnRlciB7XG4gICAgdG9wOiA2M3B4O1xuICAgIGxlZnQ6IDE3cHg7XG4gIH1cbiAgLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg4KSB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4yODhzO1xuICB9XG4gIC5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoOCk6YWZ0ZXIge1xuICAgIHRvcDogNTZweDtcbiAgICBsZWZ0OiAxMnB4O1xuICB9XG4gIEBrZXlmcmFtZXMgbGRzLXJvbGxlciB7XG4gICAgMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB9XG4gIH1cbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYS1tYWRlL3RlYS1tYWRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tea-made',\n  templateUrl: './tea-made.component.html',\n  styleUrls: ['./tea-made.component.css']\n})\nexport class TeaMadeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"mat-form-field, button {\\n    margin: 10px;\\n}\\n\\n.example-container {\\n  max-height: 350px;\\n  overflow: auto;\\n  max-width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.col-5{\\n  width: 65%;\\n}\\n\\ntable {\\n  width: 100%;\\n  text-align: initial;\\n}\\n\\nth {\\n  font-weight: bold;\\n  color: black;\\n  background-color: #c0c0c0;\\n}\\n\\ntr.mat-footer-row {\\n  font-weight: bold;\\n}\\n\\n.mat-table-sticky {\\n  background-color: #c0c0c0;\\n  border-top: 1px solid #e0e0e0;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhLXN0b2NrL3RlYS1zdG9jay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvdGVhLXN0b2NrL3RlYS1zdG9jay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsIGJ1dHRvbiB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIge1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jb2wtNXtcbiAgd2lkdGg6IDY1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzBjMGMwO1xufVxuXG50ci5tYXQtZm9vdGVyLXJvdyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LXRhYmxlLXN0aWNreSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMGMwYzA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-tea-stock',\n  templateUrl: './tea-stock.component.html',\n  styleUrls: ['./tea-stock.component.css']\n})\nexport class TeaStockComponent implements OnInit {\n  startdate: any;\n  displayedColumns: string[];\n  dataSource: TeaStock;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.startdate = new Date();\n    this.startdate.setDate(this.startdate.getDate() - 1);\n    this.displayedColumns = ['Grade', 'Kg' ];\n\n    const url = 'http://127.0.0.1:5000/teastock?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: TeaStock) => {\n    this.dataSource = data;\n    });\n  }\n\n  clickedGo() {\n    const url = 'http://127.0.0.1:5000/teastock?start=' + this.convert(this.startdate);\n    this.http.get(url).subscribe((data: TeaStock) => {\n      this.dataSource = data;\n    });\n  }\n\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n      this.startdate = event.value;\n  }\n\n  convert(str) {\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\").toString();\n    }\n    \n  getTotal(_dataSrc: string, _field: string) {\n    if (this[_dataSrc]) {\n      return this[_dataSrc].map(t => t[_field]).reduce((acc, value) => acc + value, 0);\n    } else {\n      return null;\n    }\n  }\n}\n\nexport interface TeaStock {\n  Grade: string;\n  Kg: number;\n}\n","export default \"button {\\n    cursor: pointer;\\n    margin: 10px;\\n}\\n\\n.container {\\n    margin: 20px 20px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.mat-grid-list {\\n    width: 60%;\\n    height: 50%;\\n}\\n\\n.file-input {\\n    cursor: pointer;\\n}\\n\\ninput[type=file]::-webkit-file-upload-button {\\n    cursor: pointer;\\n    border: none;\\n    background-color: inherit;\\n    padding: 10px;\\n    outline: none;\\n}\\n\\n.email-controller {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    padding-top: 50px;\\n}\\n\\n.mat-flat-button {\\n    margin-top: 50px;\\n    padding: 0px 20px;\\n    border-radius: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBsb2FkLWZpbGUvdXBsb2FkLWZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZC1maWxlL3VwbG9hZC1maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5jb250YWluZXIge1xuICAgIG1hcmdpbjogMjBweCAyMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubWF0LWdyaWQtbGlzdCB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBoZWlnaHQ6IDUwJTtcbn1cblxuLmZpbGUtaW5wdXQge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaW5wdXRbdHlwZT1maWxlXTo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG91dGxpbmU6IG5vbmU7XG59XG5cbi5lbWFpbC1jb250cm9sbGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDUwcHg7XG59XG5cbi5tYXQtZmxhdC1idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgcGFkZGluZzogMHB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.css']\n})\nexport class UploadFileComponent implements OnInit {\n\n  fileToUpload: File = null;\n  database: string;\n  isUploading = false;\n  isMailSending = false;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  uploadFileToServer() {\n    this.isUploading = true;\n    const url = 'http://127.0.0.1:5000/upload?table=' + this.database;\n    const formData: FormData = new FormData();\n    formData.append('file', this.fileToUpload, this.fileToUpload.name);\n    this.http.post(url, formData).subscribe(\n      (result: Result) => {\n        this.isUploading = false;\n        this.openSnackBar(result.message, 'Success');\n      }, (error: Response) => {\n        this.isUploading = false;\n        this.openSnackBar('Something went wrong', 'Error');\n        console.log(error);\n      }\n    );\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n  emailReportHandler() {\n    this.isMailSending = true;\n    const url = 'http://127.0.0.1:5000/email-report';\n    this.http.post(url, {}).subscribe(\n      result => {\n        this.isMailSending = false;\n        this.openSnackBar('Email report generation initiated', 'success');\n      }, error => {\n        this.isMailSending = false;\n        this.openSnackBar('Something went wrong', 'Error');\n      }\n    );\n  }\n\n}\n\nexport interface Result {\n  message: string;\n}\n","\nexport const environment = {\n  production: false,\n  url: 'http://127.0.0.1:5000/'\n};\n\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}